#! /usr/bin/env python
# -*- coding: utf-8 -*-

import itertools
import numpy
import os

from collections import defaultdict

from downward.experiment import FastDownwardExperiment
from downward.reports import PlanningReport
from downward.reports.absolute import AbsoluteReport
from downward.reports.compare import ComparativeReport
from downward.reports.comparison import ComparisonReport # custom comparison report
from downward.reports.scatter import ScatterPlotReport

from lab.reports import Attribute, geometric_mean

class DomainAttributesReport(PlanningReport):
    def __init__(self, attribute_aggregation_pairs,
                 **kwargs):
        self.attribute_aggregation_pairs = attribute_aggregation_pairs
        kwargs.setdefault('format', 'txt')
        PlanningReport.__init__(self, **kwargs)

    def get_text(self):
        """
        We do not need any markup processing or loop over attributes here,
        so the get_text() method is implemented right here.
        """
        attributes = set()
        for attribute, aggregation in self.attribute_aggregation_pairs:
            attributes.add(attribute)
        ### Begin HACK
        attributes.add('num_tasks')
        ### End HACK
        domain_algorithm_attribute_to_values = {}
        for (domain, algo), runs in self.domain_algorithm_runs.items():
            for attribute in attributes:
                domain_algorithm_attribute_to_values[(domain, algo, attribute)] = [
                    run.get(attribute, None) for run in runs if run.get(attribute, None) is not None]

        lines = []

        ### Begin HACK
        algopair_domain_attribute_better = defaultdict(int)
        algopair_domain_attribute_worse = defaultdict(int)
        min_wins = False
        attribute = 'symmetry_group_order'
        assert len(self.algorithms) == 3

        for algo1, algo2 in [(self.algorithms[0], self.algorithms[1]), (self.algorithms[1], self.algorithms[2])]:
            for domain, problems in self.domains.items():
                for problem in problems:
                    algo1_run = self.runs.get((domain, problem, algo1), None)
                    algo2_run = self.runs.get((domain, problem, algo2), None)
                    if algo1_run is None or algo2_run is None:
                        diff = None
                    else:
                        algo1_value = algo1_run.get(attribute)
                        algo2_value = algo2_run.get(attribute)
                        try:
                            diff = float(algo2_value) - float(algo1_value)
                        except (ValueError, TypeError, KeyError):
                            diff = None
                    if diff is not None:
                        if (diff < 0 and min_wins) or (diff > 0 and not min_wins):
                            # algo2 is better
                            algopair_domain_attribute_better[
                                (algo1, algo2), domain, attribute] += 1
                        elif (diff > 0 and min_wins) or (diff < 0 and not min_wins):
                            # algo2 is worse
                            algopair_domain_attribute_worse[
                                (algo1, algo2), domain, attribute] += 1
        ### End HACK

        # header lines
        algorithms_line = ['algorithm']
        for algorithm in self.algorithms:
            algorithms_line.append("\\multicolumn{{{}}}{{c}}{{{}}}".format(len(self.attribute_aggregation_pairs), algorithm))
        lines.append(self.format_line(algorithms_line))

        attributes_line = ['attributes']
        for index, algorithm in enumerate(self.algorithms, start=1):
            ### Begin HACK
            if index % 2 == 1:
                attributes_line.append('num_tasks')
            ### End HACK
            for attribute, aggregation in self.attribute_aggregation_pairs:
                attributes_line.append(attribute)
            ### Begin HACK
            if index == 2 or index == 3:
                attributes_line.append('+')
                attributes_line.append('-')
            ### End HACK
        lines.append(self.format_line(attributes_line))

        # body lines
        algorithm_attribute_aggregation_to_values = defaultdict(list)
        for domain in sorted(self.domains.keys()):
            domain_line = ['\\textsc{{{}}}'.format(domain)]
            for index, algorithm in enumerate(self.algorithms, start=1):
                ### Begin HACK
                if index % 2 == 1:
                    values = domain_algorithm_attribute_to_values.get((domain, algorithm, 'num_tasks'), None)
                    assert isinstance(values, list) or values is None
                    if values and isinstance(values[0], list): # flatten values
                        values = list(itertools.chain.from_iterable(values))
                    if values:
                        aggregated_value = sum(values)
                    else:
                        aggregated_value = ''
                    domain_line.append(aggregated_value)
                ### End HACK
                for attribute, aggregation in self.attribute_aggregation_pairs:
                    values = domain_algorithm_attribute_to_values.get((domain, algorithm, attribute), None)
                    assert isinstance(values, list) or values is None
                    if values and isinstance(values[0], list): # flatten values
                        values = list(itertools.chain.from_iterable(values))
                    if values:
                        aggregated_value = aggregation(values)
                        if isinstance(aggregated_value, numpy.float64):
                            aggregated_value = float(aggregated_value)
                        algorithm_attribute_aggregation_to_values[(algorithm, attribute, aggregation)].append(aggregated_value)
                    else:
                        # No values for the attribute, hene no aggregated value
                        # we write an empty table cell, i.e. '', into the domain
                        # line. Note that we don't want to store this value in
                        # algorithm_attribute_aggregation_to_values, to avoid failing
                        # aggregation functions.
                        aggregated_value = ''
                    domain_line.append(aggregated_value)
                ### Begin HACK
                if index == 2 or index == 3:
                    domain_line.append(algopair_domain_attribute_better[(self.algorithms[index-2], self.algorithms[index-1]), domain, 'symmetry_group_order'])
                    domain_line.append(algopair_domain_attribute_worse[(self.algorithms[index-2], self.algorithms[index-1]), domain, 'symmetry_group_order'])
                ### End HACK
            lines.append(self.format_line(domain_line))

        # summary line
        summary_line = ['summary']
        for index, algorithm in enumerate(self.algorithms, start=1):
            ### Begin HACK
            if index % 2 == 1:
                summary_line.append('num_tasks')
            ### End HACK
            for attribute, aggregation in self.attribute_aggregation_pairs:
                values = algorithm_attribute_aggregation_to_values[(algorithm, attribute, aggregation)]
                if values:
                    summary_value = aggregation(values)
                else:
                    summary_value = None
                summary_line.append(summary_value)
            ### Begin HACK
            if index == 2 or index == 3:
                summary_line.append(sum([algopair_domain_attribute_better[(self.algorithms[index-2], self.algorithms[index-1]), domain, 'symmetry_group_order'] for domain in self.domains.keys()]))
                summary_line.append(sum([algopair_domain_attribute_worse[(self.algorithms[index-2], self.algorithms[index-1]), domain, 'symmetry_group_order'] for domain in self.domains.keys()]))
            ### End HACK
        lines.append(self.format_line(summary_line))

        return '\n'.join(lines)

    def format_line(self, values, min_wins=None):
        if min_wins is not None:
            min_value = float('inf')
            max_value = 0
            for index, value in enumerate(values):
                if value < min_value:
                    min_value = value
                if value > max_value:
                    max_value = value

            for index, value in enumerate(values):
                if min_wins and value == min_value:
                    values[index] = '\\textbf{{{}}}'.format(values[index])
                if not min_wins and value == max_value:
                    values[index] = '\\textbf{{{}}}'.format(values[index])

        line = ''
        for index, value in enumerate(values):
            if isinstance(value, float):
                if value != int(value):
                    value = '{:.1f}'.format(value)
                else:
                    value = str(int(value))
            value = str(value)
            if value.endswith('.0'):
                value = value.replace('.0', '')
            if value == '':
                value = '-'
            line += '{}'.format(value)
            if index == len(values) - 1:
                line += ' \\\\'
            else:
                line += ' & '
        return line

class SuiteReport(PlanningReport):
    def __init__(self, **kwargs):
        kwargs.setdefault('format', 'txt')
        PlanningReport.__init__(self, **kwargs)

    def get_text(self):
        tasks_by_domain = defaultdict(set)
        for (domain, problem), runs in sorted(self.problem_runs.items()):
            tasks_by_domain[domain].add(problem)

        lines = []
        for domain, tasks in sorted(tasks_by_domain.items()):
            for task in sorted(tasks):
                lines.append("'{}:{}'".format(domain, task))

        return ',\n'.join(lines)

# optimal union satisficing
suite_all_opt_sat = [
'airport',
'assembly',
'barman-opt11-strips',
'barman-opt14-strips',
'barman-sat11-strips',
'barman-sat14-strips',
'blocks',
'cavediving-14-adl',
'childsnack-opt14-strips',
'childsnack-sat14-strips',
'citycar-opt14-adl',
'citycar-sat14-adl',
'depot',
'driverlog',
'elevators-opt08-strips',
'elevators-opt11-strips',
'elevators-sat08-strips',
'elevators-sat11-strips',
'floortile-opt11-strips',
'floortile-opt14-strips',
'floortile-sat11-strips',
'floortile-sat14-strips',
'freecell',
'ged-opt14-strips',
'ged-sat14-strips',
'grid',
'gripper',
'hiking-opt14-strips',
'hiking-sat14-strips',
'logistics00',
'logistics98',
'maintenance-opt14-adl',
'maintenance-sat14-adl',
'miconic',
'miconic-fulladl',
'miconic-simpleadl',
'movie',
'mprime',
'mystery',
'nomystery-opt11-strips',
'nomystery-sat11-strips',
'openstacks',
'openstacks-opt08-adl',
'openstacks-opt08-strips',
'openstacks-opt11-strips',
'openstacks-opt14-strips',
'openstacks-sat08-adl',
'openstacks-sat08-strips',
'openstacks-sat11-strips',
'openstacks-sat14-strips',
'openstacks-strips',
'optical-telegraphs',
'parcprinter-08-strips',
'parcprinter-opt11-strips',
'parcprinter-sat11-strips',
'parking-opt11-strips',
'parking-opt14-strips',
'parking-sat11-strips',
'parking-sat14-strips',
'pathways',
'pathways-noneg',
'pegsol-08-strips',
'pegsol-opt11-strips',
'pegsol-sat11-strips',
'philosophers',
'pipesworld-notankage',
'pipesworld-tankage',
'psr-large',
'psr-middle',
'psr-small',
'rovers',
'satellite',
'scanalyzer-08-strips',
'scanalyzer-opt11-strips',
'scanalyzer-sat11-strips',
'schedule',
'sokoban-opt08-strips',
'sokoban-opt11-strips',
'sokoban-sat08-strips',
'sokoban-sat11-strips',
'storage',
'tetris-opt14-strips',
'tetris-sat14-strips',
'thoughtful-sat14-strips',
'tidybot-opt11-strips',
'tidybot-opt14-strips',
'tidybot-sat11-strips',
'tpp',
'transport-opt08-strips',
'transport-opt11-strips',
'transport-opt14-strips',
'transport-sat08-strips',
'transport-sat11-strips',
'transport-sat14-strips',
'trucks',
'trucks-strips',
'visitall-opt11-strips',
'visitall-opt14-strips',
'visitall-sat11-strips',
'visitall-sat14-strips',
'woodworking-opt08-strips',
'woodworking-opt11-strips',
'woodworking-sat08-strips',
'woodworking-sat11-strips',
'zenotravel',
]
duplicates = [
'barman-opt11-strips',
'barman-sat11-strips',
'elevators-opt08-strips',
'elevators-sat08-strips',
'floortile-opt11-strips',
'floortile-sat11-strips',
'openstacks',
'openstacks-opt08-strips',
'openstacks-opt11-strips',
'openstacks-sat08-strips',
'openstacks-sat11-strips',
'openstacks-strips',
'parcprinter-08-strips',
'parking-opt11-strips',
'parking-sat11-strips',
'pegsol-08-strips',
'scanalyzer-08-strips',
'sokoban-opt08-strips',
'sokoban-sat08-strips',
'tidybot-opt11-strips',
'transport-opt08-strips',
'transport-opt11-strips',
'transport-sat08-strips',
'transport-sat11-strips',
'visitall-opt11-strips',
'visitall-sat11-strips',
'woodworking-opt08-strips',
'woodworking-sat08-strips',
]
suite = [domain for domain in suite_all_opt_sat if domain not in duplicates]
#suite = suite_all_opt_sat

def not_unsolvable(run):
    unsolvable = ['miconic-fulladl:f21-3.pddl', 'miconic-fulladl:f30-2.pddl',
    'mystery:prob04.pddl', 'mystery:prob05.pddl', 'mystery:prob07.pddl',
    'mystery:prob08.pddl', 'mystery:prob12.pddl', 'mystery:prob16.pddl',
    'mystery:prob18.pddl', 'mystery:prob21.pddl', 'mystery:prob22.pddl',
    'mystery:prob23.pddl', 'mystery:prob24.pddl']
    return run['domain'] + ':' + run['problem'] not in unsolvable

def symmetries_or_not(props):
    generator_count_lifted = props.get('generator_count_lifted', 0)
    generators_count = props.get('generators_count', 0)
    props['num_tasks'] = 1
    has_symmetries = 0
    if generator_count_lifted > 0 or generators_count > 0:
        has_symmetries = 1
    props['has_symmetries'] = has_symmetries
    return props

exp = FastDownwardExperiment()

REVISION1 = 'f8e65d0f4b44'
REVISION2 = 'ef5ac3aa3935'

def remove_revision(run):
    algo = run['algorithm']
    algo = algo.replace('{}-'.format(REVISION1), '')
    algo = algo.replace('{}-'.format(REVISION2), '')
    run['algorithm'] = algo
    return run

def duplicate_attribute(props):
    props['time_symmetries'] = props.get('translator_time_symmetries0_computing_symmetries', None)
    return props

exp.add_fetcher('data/2018-08-09-lifted-eval',filter=[remove_revision,symmetries_or_not,duplicate_attribute],filter_domain=suite)
exp.add_fetcher('data/2018-08-09-ground-eval',filter=[remove_revision,symmetries_or_not],filter_domain=suite,merge=True)
exp.add_fetcher('data/2018-08-09-baggy-lifted-eval',filter=[remove_revision,symmetries_or_not,duplicate_attribute],filter_domain=suite,merge=True)
exp.add_fetcher('data/2018-08-09-baggy-ground-eval',filter=[remove_revision,symmetries_or_not],filter_domain=suite,merge=True)
exp.add_fetcher('data/2018-08-13-lifted-no-order-eval',filter=[remove_revision,symmetries_or_not],filter_domain=suite,merge=True) # for runtime results
exp.add_fetcher('data/2018-08-13-baggy-lifted-no-order-eval',filter=[remove_revision,symmetries_or_not],filter_domain=suite,merge=True) # for runtime results

def print_stuff(run):
    time_symmetries = run.get('time_symmetries', None)
    if time_symmetries is None:
        print("{} could not compute symmetries on {} {}".format(run.get('algorithm'), run.get('domain'), run.get('problem')))
    if time_symmetries is not None and time_symmetries >= 2:
        print("{} takes {} to compute symmetries on {} {}".format(run.get('algorithm'), time_symmetries, run.get('domain'), run.get('problem')))
    return run

exp.add_report(
    SuiteReport(
        filter_algorithm=[
            'baggy-translate-symm-stabgoal-stabinit',
        ],
    ),
    outfile=os.path.join(exp.eval_dir, 'baggy-tasks.txt'),
)

# result of above report
baggy_tasks = [
'airport:p01-airport1-p1.pddl',
'airport:p02-airport1-p1.pddl',
'airport:p03-airport1-p2.pddl',
'airport:p04-airport2-p1.pddl',
'airport:p05-airport2-p1.pddl',
'airport:p06-airport2-p2.pddl',
'airport:p07-airport2-p2.pddl',
'airport:p08-airport2-p3.pddl',
'airport:p09-airport2-p4.pddl',
'airport:p10-airport3-p1.pddl',
'airport:p11-airport3-p1.pddl',
'airport:p12-airport3-p2.pddl',
'airport:p13-airport3-p2.pddl',
'airport:p14-airport3-p3.pddl',
'airport:p15-airport3-p3.pddl',
'airport:p16-airport3-p4.pddl',
'airport:p17-airport3-p5.pddl',
'airport:p18-airport3-p6.pddl',
'airport:p19-airport3-p6.pddl',
'airport:p20-airport3-p7.pddl',
'airport:p21-airport4halfMUC-p2.pddl',
'airport:p22-airport4halfMUC-p3.pddl',
'airport:p23-airport4halfMUC-p4.pddl',
'airport:p24-airport4halfMUC-p4.pddl',
'airport:p25-airport4halfMUC-p5.pddl',
'airport:p26-airport4halfMUC-p6.pddl',
'airport:p27-airport4halfMUC-p6.pddl',
'airport:p28-airport4halfMUC-p7.pddl',
'airport:p29-airport4halfMUC-p8.pddl',
'airport:p30-airport4halfMUC-p8.pddl',
'airport:p31-airport4halfMUC-p9.pddl',
'airport:p32-airport4halfMUC-p10.pddl',
'airport:p33-airport4halfMUC-p10.pddl',
'airport:p34-airport4halfMUC-p11.pddl',
'airport:p35-airport4halfMUC-p12.pddl',
'airport:p36-airport5MUC-p2.pddl',
'airport:p37-airport5MUC-p3.pddl',
'airport:p38-airport5MUC-p3.pddl',
'airport:p39-airport5MUC-p4.pddl',
'airport:p40-airport5MUC-p4.pddl',
'airport:p41-airport5MUC-p4.pddl',
'airport:p42-airport5MUC-p5.pddl',
'airport:p43-airport5MUC-p5.pddl',
'airport:p44-airport5MUC-p5.pddl',
'airport:p45-airport5MUC-p6.pddl',
'airport:p46-airport5MUC-p6.pddl',
'airport:p47-airport5MUC-p8.pddl',
'airport:p48-airport5MUC-p9.pddl',
'airport:p49-airport5MUC-p10.pddl',
'airport:p50-airport5MUC-p15.pddl',
'barman-opt14-strips:p435-1.pddl',
'barman-opt14-strips:p435-2.pddl',
'barman-opt14-strips:p435-3.pddl',
'barman-opt14-strips:p536-1.pddl',
'barman-opt14-strips:p536-2.pddl',
'barman-opt14-strips:p536-3.pddl',
'barman-opt14-strips:p638-1.pddl',
'barman-opt14-strips:p638-2.pddl',
'barman-opt14-strips:p638-3.pddl',
'barman-opt14-strips:p739-1.pddl',
'barman-opt14-strips:p739-2.pddl',
'barman-opt14-strips:p739-3.pddl',
'barman-opt14-strips:p839-1.pddl',
'barman-opt14-strips:p839-2.pddl',
'barman-sat14-strips:p1-11-4-15.pddl',
'barman-sat14-strips:p1-11-5-15.pddl',
'barman-sat14-strips:p1-11-5-16.pddl',
'barman-sat14-strips:p2-10-4-13.pddl',
'barman-sat14-strips:p2-11-4-15.pddl',
'barman-sat14-strips:p2-11-5-15.pddl',
'barman-sat14-strips:p2-11-5-16.pddl',
'barman-sat14-strips:p2-11-5-17.pddl',
'barman-sat14-strips:p3-10-4-13.pddl',
'barman-sat14-strips:p3-11-4-15.pddl',
'barman-sat14-strips:p3-11-5-15.pddl',
'barman-sat14-strips:p3-11-5-16.pddl',
'barman-sat14-strips:p3-11-5-17.pddl',
'barman-sat14-strips:p4-11-4-14.pddl',
'barman-sat14-strips:p4-11-4-15.pddl',
'barman-sat14-strips:p4-11-5-15.pddl',
'barman-sat14-strips:p5-10-4-13.pddl',
'barman-sat14-strips:p5-11-4-15.pddl',
'barman-sat14-strips:p5-11-5-15.pddl',
'barman-sat14-strips:p5-11-5-16.pddl',
'cavediving-14-adl:testing01.pddl',
'cavediving-14-adl:testing01_easy.pddl',
'cavediving-14-adl:testing02_easy.pddl',
'cavediving-14-adl:testing03_easy.pddl',
'cavediving-14-adl:testing04_easy.pddl',
'cavediving-14-adl:testing05A_easy.pddl',
'cavediving-14-adl:testing06A_easy.pddl',
'cavediving-14-adl:testing07_easy.pddl',
'cavediving-14-adl:testing08_easy.pddl',
'cavediving-14-adl:testing09_easy.pddl',
'cavediving-14-adl:testing10_easy.pddl',
'cavediving-14-adl:testing11_easy.pddl',
'cavediving-14-adl:testing12_easy.pddl',
'cavediving-14-adl:testing13_easy.pddl',
'cavediving-14-adl:testing14_easy.pddl',
'cavediving-14-adl:testing15_easy.pddl',
'cavediving-14-adl:testing16_easy.pddl',
'cavediving-14-adl:testing18A_easy.pddl',
'cavediving-14-adl:testing18_easy.pddl',
'cavediving-14-adl:testing20A_easy.pddl',
'childsnack-opt14-strips:child-snack_pfile01-2.pddl',
'childsnack-opt14-strips:child-snack_pfile01.pddl',
'childsnack-opt14-strips:child-snack_pfile02-2.pddl',
'childsnack-opt14-strips:child-snack_pfile02.pddl',
'childsnack-opt14-strips:child-snack_pfile03-2.pddl',
'childsnack-opt14-strips:child-snack_pfile03.pddl',
'childsnack-opt14-strips:child-snack_pfile04-2.pddl',
'childsnack-opt14-strips:child-snack_pfile04.pddl',
'childsnack-opt14-strips:child-snack_pfile05-2.pddl',
'childsnack-opt14-strips:child-snack_pfile05.pddl',
'childsnack-opt14-strips:child-snack_pfile06-2.pddl',
'childsnack-opt14-strips:child-snack_pfile06.pddl',
'childsnack-opt14-strips:child-snack_pfile07-2.pddl',
'childsnack-opt14-strips:child-snack_pfile07.pddl',
'childsnack-opt14-strips:child-snack_pfile08-2.pddl',
'childsnack-opt14-strips:child-snack_pfile08.pddl',
'childsnack-opt14-strips:child-snack_pfile09-2.pddl',
'childsnack-opt14-strips:child-snack_pfile09.pddl',
'childsnack-opt14-strips:child-snack_pfile10-2.pddl',
'childsnack-opt14-strips:child-snack_pfile10.pddl',
'childsnack-sat14-strips:child-snack_pfile05-2.pddl',
'childsnack-sat14-strips:child-snack_pfile05.pddl',
'childsnack-sat14-strips:child-snack_pfile06-2.pddl',
'childsnack-sat14-strips:child-snack_pfile07-2.pddl',
'childsnack-sat14-strips:child-snack_pfile08-2.pddl',
'childsnack-sat14-strips:child-snack_pfile08.pddl',
'childsnack-sat14-strips:child-snack_pfile09-2.pddl',
'childsnack-sat14-strips:child-snack_pfile09.pddl',
'childsnack-sat14-strips:child-snack_pfile10-2.pddl',
'childsnack-sat14-strips:child-snack_pfile10.pddl',
'childsnack-sat14-strips:child-snack_pfile11-2.pddl',
'childsnack-sat14-strips:child-snack_pfile11.pddl',
'childsnack-sat14-strips:child-snack_pfile12.pddl',
'childsnack-sat14-strips:child-snack_pfile13-2.pddl',
'childsnack-sat14-strips:child-snack_pfile13.pddl',
'childsnack-sat14-strips:child-snack_pfile14.pddl',
'childsnack-sat14-strips:child-snack_pfile15-2.pddl',
'childsnack-sat14-strips:child-snack_pfile16-2.pddl',
'childsnack-sat14-strips:child-snack_pfile19-2.pddl',
'childsnack-sat14-strips:child-snack_pfile19.pddl',
'citycar-opt14-adl:p2-2-2-1-2.pddl',
'citycar-opt14-adl:p2-2-2-2-1.pddl',
'citycar-opt14-adl:p2-2-3-1-2.pddl',
'citycar-opt14-adl:p2-2-3-2-1.pddl',
'citycar-opt14-adl:p2-2-3-2-2.pddl',
'citycar-opt14-adl:p2-2-4-1-2.pddl',
'citycar-opt14-adl:p2-2-4-2-1.pddl',
'citycar-opt14-adl:p2-2-5-2-2.pddl',
'citycar-opt14-adl:p2-2-6-1-1.pddl',
'citycar-opt14-adl:p2-2-6-2-2.pddl',
'citycar-opt14-adl:p2-3-3-3-1.pddl',
'citycar-opt14-adl:p2-3-4-3-1.pddl',
'citycar-opt14-adl:p2-3-6-3-2.pddl',
'citycar-opt14-adl:p3-3-2-2-1.pddl',
'citycar-opt14-adl:p3-3-2-3-1.pddl',
'citycar-opt14-adl:p3-3-3-3-1.pddl',
'citycar-opt14-adl:p3-3-3-3-2.pddl',
'citycar-sat14-adl:p3-3-2-0-1.pddl',
'citycar-sat14-adl:p3-4-2-0-1.pddl',
'citycar-sat14-adl:p3-5-2-0-1.pddl',
'citycar-sat14-adl:p3-5-2-0-2.pddl',
'citycar-sat14-adl:p4-2-3-0-2.pddl',
'citycar-sat14-adl:p4-3-2-0-1.pddl',
'citycar-sat14-adl:p4-3-2-0-2.pddl',
'citycar-sat14-adl:p4-3-3-0-1.pddl',
'citycar-sat14-adl:p4-3-3-0-2.pddl',
'citycar-sat14-adl:p4-4-2-0-1.pddl',
'citycar-sat14-adl:p4-4-2-0-2.pddl',
'citycar-sat14-adl:p4-4-3-0-1.pddl',
'citycar-sat14-adl:p4-4-3-0-2.pddl',
'citycar-sat14-adl:p4-5-2-0-1.pddl',
'citycar-sat14-adl:p4-5-2-0-2.pddl',
'citycar-sat14-adl:p4-5-3-0-1.pddl',
'citycar-sat14-adl:p4-5-3-0-2.pddl',
'depot:p01.pddl',
'depot:p02.pddl',
'depot:p03.pddl',
'depot:p04.pddl',
'depot:p05.pddl',
'depot:p06.pddl',
'depot:p07.pddl',
'depot:p08.pddl',
'depot:p09.pddl',
'depot:p10.pddl',
'depot:p11.pddl',
'depot:p12.pddl',
'depot:p13.pddl',
'depot:p14.pddl',
'depot:p15.pddl',
'depot:p16.pddl',
'depot:p17.pddl',
'depot:p18.pddl',
'depot:p19.pddl',
'depot:p20.pddl',
'depot:p21.pddl',
'depot:p22.pddl',
'driverlog:p01.pddl',
'driverlog:p02.pddl',
'driverlog:p03.pddl',
'driverlog:p04.pddl',
'driverlog:p05.pddl',
'driverlog:p06.pddl',
'driverlog:p07.pddl',
'driverlog:p08.pddl',
'driverlog:p09.pddl',
'driverlog:p10.pddl',
'driverlog:p11.pddl',
'driverlog:p12.pddl',
'driverlog:p13.pddl',
'driverlog:p14.pddl',
'driverlog:p15.pddl',
'driverlog:p16.pddl',
'driverlog:p17.pddl',
'driverlog:p18.pddl',
'driverlog:p19.pddl',
'driverlog:p20.pddl',
'elevators-opt11-strips:p01.pddl',
'elevators-opt11-strips:p02.pddl',
'elevators-opt11-strips:p03.pddl',
'elevators-opt11-strips:p04.pddl',
'elevators-opt11-strips:p05.pddl',
'elevators-opt11-strips:p06.pddl',
'elevators-opt11-strips:p07.pddl',
'elevators-opt11-strips:p08.pddl',
'elevators-opt11-strips:p09.pddl',
'elevators-opt11-strips:p10.pddl',
'elevators-opt11-strips:p11.pddl',
'elevators-opt11-strips:p12.pddl',
'elevators-opt11-strips:p13.pddl',
'elevators-opt11-strips:p14.pddl',
'elevators-opt11-strips:p15.pddl',
'elevators-opt11-strips:p16.pddl',
'elevators-opt11-strips:p17.pddl',
'elevators-opt11-strips:p18.pddl',
'elevators-opt11-strips:p19.pddl',
'elevators-opt11-strips:p20.pddl',
'elevators-sat11-strips:p01.pddl',
'elevators-sat11-strips:p02.pddl',
'elevators-sat11-strips:p03.pddl',
'elevators-sat11-strips:p04.pddl',
'elevators-sat11-strips:p05.pddl',
'elevators-sat11-strips:p06.pddl',
'elevators-sat11-strips:p07.pddl',
'elevators-sat11-strips:p08.pddl',
'elevators-sat11-strips:p09.pddl',
'elevators-sat11-strips:p10.pddl',
'elevators-sat11-strips:p11.pddl',
'elevators-sat11-strips:p12.pddl',
'elevators-sat11-strips:p13.pddl',
'elevators-sat11-strips:p14.pddl',
'elevators-sat11-strips:p15.pddl',
'elevators-sat11-strips:p16.pddl',
'elevators-sat11-strips:p17.pddl',
'elevators-sat11-strips:p18.pddl',
'elevators-sat11-strips:p19.pddl',
'elevators-sat11-strips:p20.pddl',
'floortile-opt14-strips:p01-4-3-2.pddl',
'floortile-opt14-strips:p01-4-4-2.pddl',
'floortile-opt14-strips:p01-5-3-2.pddl',
'floortile-opt14-strips:p01-5-4-2.pddl',
'floortile-opt14-strips:p01-5-5-2.pddl',
'floortile-opt14-strips:p01-6-4-2.pddl',
'floortile-opt14-strips:p01-6-5-2.pddl',
'floortile-opt14-strips:p02-4-4-2.pddl',
'floortile-opt14-strips:p02-5-3-2.pddl',
'floortile-opt14-strips:p02-5-4-2.pddl',
'floortile-opt14-strips:p02-5-5-2.pddl',
'floortile-opt14-strips:p02-6-4-2.pddl',
'floortile-opt14-strips:p02-6-5-2.pddl',
'floortile-opt14-strips:p03-4-3-2.pddl',
'floortile-opt14-strips:p03-4-4-2.pddl',
'floortile-opt14-strips:p03-5-3-2.pddl',
'floortile-opt14-strips:p03-5-4-2.pddl',
'floortile-opt14-strips:p03-5-5-2.pddl',
'floortile-opt14-strips:p03-6-4-2.pddl',
'floortile-opt14-strips:p03-6-5-2.pddl',
'floortile-sat14-strips:p01-4-3-2.pddl',
'floortile-sat14-strips:p01-5-4-2.pddl',
'floortile-sat14-strips:p01-5-5-2.pddl',
'floortile-sat14-strips:p01-6-4-2.pddl',
'floortile-sat14-strips:p01-6-5-2.pddl',
'floortile-sat14-strips:p01-6-5-3.pddl',
'floortile-sat14-strips:p02-5-4-2.pddl',
'floortile-sat14-strips:p02-6-4-2.pddl',
'floortile-sat14-strips:p02-6-5-2.pddl',
'floortile-sat14-strips:p02-6-5-3.pddl',
'floortile-sat14-strips:p03-6-4-2.pddl',
'floortile-sat14-strips:p03-6-5-2.pddl',
'floortile-sat14-strips:p03-6-5-3.pddl',
'floortile-sat14-strips:p04-5-4-2.pddl',
'floortile-sat14-strips:p04-5-5-2.pddl',
'floortile-sat14-strips:p04-6-5-2.pddl',
'floortile-sat14-strips:p04-6-5-3.pddl',
'floortile-sat14-strips:p05-4-3-2.pddl',
'floortile-sat14-strips:p05-6-5-2.pddl',
'floortile-sat14-strips:p05-6-5-3.pddl',
'grid:prob01.pddl',
'grid:prob02.pddl',
'grid:prob03.pddl',
'grid:prob04.pddl',
'grid:prob05.pddl',
'gripper:prob01.pddl',
'gripper:prob02.pddl',
'gripper:prob03.pddl',
'gripper:prob04.pddl',
'gripper:prob05.pddl',
'gripper:prob06.pddl',
'gripper:prob07.pddl',
'gripper:prob08.pddl',
'gripper:prob09.pddl',
'gripper:prob10.pddl',
'gripper:prob11.pddl',
'gripper:prob12.pddl',
'gripper:prob13.pddl',
'gripper:prob14.pddl',
'gripper:prob15.pddl',
'gripper:prob16.pddl',
'gripper:prob17.pddl',
'gripper:prob18.pddl',
'gripper:prob19.pddl',
'gripper:prob20.pddl',
'hiking-opt14-strips:ptesting-1-2-3.pddl',
'hiking-opt14-strips:ptesting-1-2-4.pddl',
'hiking-opt14-strips:ptesting-1-2-5.pddl',
'hiking-opt14-strips:ptesting-1-2-7.pddl',
'hiking-opt14-strips:ptesting-1-2-8.pddl',
'hiking-opt14-strips:ptesting-2-2-3.pddl',
'hiking-opt14-strips:ptesting-2-2-4.pddl',
'hiking-opt14-strips:ptesting-2-2-5.pddl',
'hiking-opt14-strips:ptesting-2-2-6.pddl',
'hiking-opt14-strips:ptesting-2-2-7.pddl',
'hiking-opt14-strips:ptesting-2-2-8.pddl',
'hiking-opt14-strips:ptesting-2-3-4.pddl',
'hiking-opt14-strips:ptesting-2-3-5.pddl',
'hiking-opt14-strips:ptesting-2-3-6.pddl',
'hiking-opt14-strips:ptesting-2-3-7.pddl',
'hiking-opt14-strips:ptesting-2-4-3.pddl',
'hiking-opt14-strips:ptesting-2-4-4.pddl',
'hiking-opt14-strips:ptesting-2-4-5.pddl',
'hiking-opt14-strips:ptesting-2-4-6.pddl',
'hiking-opt14-strips:ptesting-2-4-7.pddl',
'hiking-sat14-strips:ptesting-1-2-7.pddl',
'hiking-sat14-strips:ptesting-1-2-8.pddl',
'hiking-sat14-strips:ptesting-2-2-6.pddl',
'hiking-sat14-strips:ptesting-2-2-7.pddl',
'hiking-sat14-strips:ptesting-2-2-8.pddl',
'hiking-sat14-strips:ptesting-2-3-6.pddl',
'hiking-sat14-strips:ptesting-2-3-7.pddl',
'hiking-sat14-strips:ptesting-2-3-8.pddl',
'hiking-sat14-strips:ptesting-2-4-5.pddl',
'hiking-sat14-strips:ptesting-2-4-6.pddl',
'hiking-sat14-strips:ptesting-2-4-7.pddl',
'hiking-sat14-strips:ptesting-2-4-8.pddl',
'hiking-sat14-strips:ptesting-3-3-5.pddl',
'hiking-sat14-strips:ptesting-3-3-6.pddl',
'hiking-sat14-strips:ptesting-3-3-7.pddl',
'hiking-sat14-strips:ptesting-3-3-8.pddl',
'hiking-sat14-strips:ptesting-3-4-5.pddl',
'hiking-sat14-strips:ptesting-3-4-6.pddl',
'hiking-sat14-strips:ptesting-3-4-7.pddl',
'hiking-sat14-strips:ptesting-3-4-8.pddl',
'logistics00:probLOGISTICS-10-0.pddl',
'logistics00:probLOGISTICS-10-1.pddl',
'logistics00:probLOGISTICS-11-0.pddl',
'logistics00:probLOGISTICS-11-1.pddl',
'logistics00:probLOGISTICS-12-0.pddl',
'logistics00:probLOGISTICS-12-1.pddl',
'logistics00:probLOGISTICS-13-0.pddl',
'logistics00:probLOGISTICS-13-1.pddl',
'logistics00:probLOGISTICS-14-0.pddl',
'logistics00:probLOGISTICS-14-1.pddl',
'logistics00:probLOGISTICS-15-0.pddl',
'logistics00:probLOGISTICS-15-1.pddl',
'logistics00:probLOGISTICS-4-0.pddl',
'logistics00:probLOGISTICS-4-1.pddl',
'logistics00:probLOGISTICS-4-2.pddl',
'logistics00:probLOGISTICS-5-0.pddl',
'logistics00:probLOGISTICS-5-1.pddl',
'logistics00:probLOGISTICS-5-2.pddl',
'logistics00:probLOGISTICS-6-0.pddl',
'logistics00:probLOGISTICS-6-1.pddl',
'logistics00:probLOGISTICS-6-2.pddl',
'logistics00:probLOGISTICS-6-9.pddl',
'logistics00:probLOGISTICS-7-0.pddl',
'logistics00:probLOGISTICS-7-1.pddl',
'logistics00:probLOGISTICS-8-0.pddl',
'logistics00:probLOGISTICS-8-1.pddl',
'logistics00:probLOGISTICS-9-0.pddl',
'logistics00:probLOGISTICS-9-1.pddl',
'logistics98:prob01.pddl',
'logistics98:prob02.pddl',
'logistics98:prob03.pddl',
'logistics98:prob04.pddl',
'logistics98:prob05.pddl',
'logistics98:prob06.pddl',
'logistics98:prob07.pddl',
'logistics98:prob08.pddl',
'logistics98:prob09.pddl',
'logistics98:prob10.pddl',
'logistics98:prob11.pddl',
'logistics98:prob12.pddl',
'logistics98:prob13.pddl',
'logistics98:prob14.pddl',
'logistics98:prob15.pddl',
'logistics98:prob16.pddl',
'logistics98:prob17.pddl',
'logistics98:prob18.pddl',
'logistics98:prob19.pddl',
'logistics98:prob20.pddl',
'logistics98:prob21.pddl',
'logistics98:prob22.pddl',
'logistics98:prob23.pddl',
'logistics98:prob24.pddl',
'logistics98:prob25.pddl',
'logistics98:prob26.pddl',
'logistics98:prob27.pddl',
'logistics98:prob28.pddl',
'logistics98:prob29.pddl',
'logistics98:prob30.pddl',
'logistics98:prob31.pddl',
'logistics98:prob32.pddl',
'logistics98:prob33.pddl',
'logistics98:prob34.pddl',
'logistics98:prob35.pddl',
'maintenance-opt14-adl:maintenance-1-3-010-010-2-000.pddl',
'maintenance-opt14-adl:maintenance-1-3-010-010-2-001.pddl',
'maintenance-opt14-adl:maintenance-1-3-010-010-2-002.pddl',
'maintenance-opt14-adl:maintenance-1-3-015-020-2-001.pddl',
'maintenance-opt14-adl:maintenance-1-3-015-020-2-002.pddl',
'maintenance-sat14-adl:maintenance-1-3-060-180-5-000.pddl',
'maintenance-sat14-adl:maintenance-1-3-060-180-5-001.pddl',
'maintenance-sat14-adl:maintenance-1-3-060-180-5-002.pddl',
'maintenance-sat14-adl:maintenance-1-3-100-300-5-000.pddl',
'maintenance-sat14-adl:maintenance-1-3-100-300-5-001.pddl',
'maintenance-sat14-adl:maintenance-1-3-100-300-7-000.pddl',
'maintenance-sat14-adl:maintenance-1-3-100-300-7-001.pddl',
'maintenance-sat14-adl:maintenance-1-3-100-300-7-002.pddl',
'maintenance-sat14-adl:maintenance-1-3-150-500-6-001.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-500-5-001.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-500-5-002.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-700-7-000.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-700-7-001.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-700-7-002.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-900-5-000.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-900-5-001.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-900-5-002.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-900-8-000.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-900-8-001.pddl',
'maintenance-sat14-adl:maintenance-1-3-200-900-8-002.pddl',
'miconic:s1-0.pddl',
'miconic:s1-1.pddl',
'miconic:s1-2.pddl',
'miconic:s1-3.pddl',
'miconic:s1-4.pddl',
'miconic:s10-0.pddl',
'miconic:s10-1.pddl',
'miconic:s10-2.pddl',
'miconic:s10-3.pddl',
'miconic:s10-4.pddl',
'miconic:s11-0.pddl',
'miconic:s11-1.pddl',
'miconic:s11-2.pddl',
'miconic:s11-3.pddl',
'miconic:s11-4.pddl',
'miconic:s12-0.pddl',
'miconic:s12-1.pddl',
'miconic:s12-2.pddl',
'miconic:s12-3.pddl',
'miconic:s12-4.pddl',
'miconic:s13-0.pddl',
'miconic:s13-1.pddl',
'miconic:s13-2.pddl',
'miconic:s13-3.pddl',
'miconic:s13-4.pddl',
'miconic:s14-0.pddl',
'miconic:s14-1.pddl',
'miconic:s14-2.pddl',
'miconic:s14-3.pddl',
'miconic:s14-4.pddl',
'miconic:s15-0.pddl',
'miconic:s15-1.pddl',
'miconic:s15-2.pddl',
'miconic:s15-3.pddl',
'miconic:s15-4.pddl',
'miconic:s16-0.pddl',
'miconic:s16-1.pddl',
'miconic:s16-2.pddl',
'miconic:s16-3.pddl',
'miconic:s16-4.pddl',
'miconic:s17-0.pddl',
'miconic:s17-1.pddl',
'miconic:s17-2.pddl',
'miconic:s17-3.pddl',
'miconic:s17-4.pddl',
'miconic:s18-0.pddl',
'miconic:s18-1.pddl',
'miconic:s18-2.pddl',
'miconic:s18-3.pddl',
'miconic:s18-4.pddl',
'miconic:s19-0.pddl',
'miconic:s19-1.pddl',
'miconic:s19-2.pddl',
'miconic:s19-3.pddl',
'miconic:s19-4.pddl',
'miconic:s2-0.pddl',
'miconic:s2-1.pddl',
'miconic:s2-2.pddl',
'miconic:s2-3.pddl',
'miconic:s2-4.pddl',
'miconic:s20-0.pddl',
'miconic:s20-1.pddl',
'miconic:s20-2.pddl',
'miconic:s20-3.pddl',
'miconic:s20-4.pddl',
'miconic:s21-0.pddl',
'miconic:s21-1.pddl',
'miconic:s21-2.pddl',
'miconic:s21-3.pddl',
'miconic:s21-4.pddl',
'miconic:s22-0.pddl',
'miconic:s22-1.pddl',
'miconic:s22-2.pddl',
'miconic:s22-3.pddl',
'miconic:s22-4.pddl',
'miconic:s23-0.pddl',
'miconic:s23-1.pddl',
'miconic:s23-2.pddl',
'miconic:s23-3.pddl',
'miconic:s23-4.pddl',
'miconic:s24-0.pddl',
'miconic:s24-1.pddl',
'miconic:s24-2.pddl',
'miconic:s24-3.pddl',
'miconic:s24-4.pddl',
'miconic:s25-0.pddl',
'miconic:s25-1.pddl',
'miconic:s25-2.pddl',
'miconic:s25-3.pddl',
'miconic:s25-4.pddl',
'miconic:s26-0.pddl',
'miconic:s26-1.pddl',
'miconic:s26-2.pddl',
'miconic:s26-3.pddl',
'miconic:s26-4.pddl',
'miconic:s27-0.pddl',
'miconic:s27-1.pddl',
'miconic:s27-2.pddl',
'miconic:s27-3.pddl',
'miconic:s27-4.pddl',
'miconic:s28-0.pddl',
'miconic:s28-1.pddl',
'miconic:s28-2.pddl',
'miconic:s28-3.pddl',
'miconic:s28-4.pddl',
'miconic:s29-0.pddl',
'miconic:s29-1.pddl',
'miconic:s29-2.pddl',
'miconic:s29-3.pddl',
'miconic:s29-4.pddl',
'miconic:s3-0.pddl',
'miconic:s3-1.pddl',
'miconic:s3-2.pddl',
'miconic:s3-3.pddl',
'miconic:s3-4.pddl',
'miconic:s30-0.pddl',
'miconic:s30-1.pddl',
'miconic:s30-2.pddl',
'miconic:s30-3.pddl',
'miconic:s30-4.pddl',
'miconic:s4-0.pddl',
'miconic:s4-1.pddl',
'miconic:s4-2.pddl',
'miconic:s4-3.pddl',
'miconic:s4-4.pddl',
'miconic:s5-0.pddl',
'miconic:s5-1.pddl',
'miconic:s5-2.pddl',
'miconic:s5-3.pddl',
'miconic:s5-4.pddl',
'miconic:s6-0.pddl',
'miconic:s6-1.pddl',
'miconic:s6-2.pddl',
'miconic:s6-3.pddl',
'miconic:s6-4.pddl',
'miconic:s7-0.pddl',
'miconic:s7-1.pddl',
'miconic:s7-2.pddl',
'miconic:s7-3.pddl',
'miconic:s7-4.pddl',
'miconic:s8-0.pddl',
'miconic:s8-1.pddl',
'miconic:s8-2.pddl',
'miconic:s8-3.pddl',
'miconic:s8-4.pddl',
'miconic:s9-0.pddl',
'miconic:s9-1.pddl',
'miconic:s9-2.pddl',
'miconic:s9-3.pddl',
'miconic:s9-4.pddl',
'miconic-simpleadl:s1-0.pddl',
'miconic-simpleadl:s1-1.pddl',
'miconic-simpleadl:s1-2.pddl',
'miconic-simpleadl:s1-3.pddl',
'miconic-simpleadl:s1-4.pddl',
'miconic-simpleadl:s10-0.pddl',
'miconic-simpleadl:s10-1.pddl',
'miconic-simpleadl:s10-2.pddl',
'miconic-simpleadl:s10-3.pddl',
'miconic-simpleadl:s10-4.pddl',
'miconic-simpleadl:s11-0.pddl',
'miconic-simpleadl:s11-1.pddl',
'miconic-simpleadl:s11-2.pddl',
'miconic-simpleadl:s11-3.pddl',
'miconic-simpleadl:s11-4.pddl',
'miconic-simpleadl:s12-0.pddl',
'miconic-simpleadl:s12-1.pddl',
'miconic-simpleadl:s12-2.pddl',
'miconic-simpleadl:s12-3.pddl',
'miconic-simpleadl:s12-4.pddl',
'miconic-simpleadl:s13-0.pddl',
'miconic-simpleadl:s13-1.pddl',
'miconic-simpleadl:s13-2.pddl',
'miconic-simpleadl:s13-3.pddl',
'miconic-simpleadl:s13-4.pddl',
'miconic-simpleadl:s14-0.pddl',
'miconic-simpleadl:s14-1.pddl',
'miconic-simpleadl:s14-2.pddl',
'miconic-simpleadl:s14-3.pddl',
'miconic-simpleadl:s14-4.pddl',
'miconic-simpleadl:s15-0.pddl',
'miconic-simpleadl:s15-1.pddl',
'miconic-simpleadl:s15-2.pddl',
'miconic-simpleadl:s15-3.pddl',
'miconic-simpleadl:s15-4.pddl',
'miconic-simpleadl:s16-0.pddl',
'miconic-simpleadl:s16-1.pddl',
'miconic-simpleadl:s16-2.pddl',
'miconic-simpleadl:s16-3.pddl',
'miconic-simpleadl:s16-4.pddl',
'miconic-simpleadl:s17-0.pddl',
'miconic-simpleadl:s17-1.pddl',
'miconic-simpleadl:s17-2.pddl',
'miconic-simpleadl:s17-3.pddl',
'miconic-simpleadl:s17-4.pddl',
'miconic-simpleadl:s18-0.pddl',
'miconic-simpleadl:s18-1.pddl',
'miconic-simpleadl:s18-2.pddl',
'miconic-simpleadl:s18-3.pddl',
'miconic-simpleadl:s18-4.pddl',
'miconic-simpleadl:s19-0.pddl',
'miconic-simpleadl:s19-1.pddl',
'miconic-simpleadl:s19-2.pddl',
'miconic-simpleadl:s19-3.pddl',
'miconic-simpleadl:s19-4.pddl',
'miconic-simpleadl:s2-0.pddl',
'miconic-simpleadl:s2-1.pddl',
'miconic-simpleadl:s2-2.pddl',
'miconic-simpleadl:s2-3.pddl',
'miconic-simpleadl:s2-4.pddl',
'miconic-simpleadl:s20-0.pddl',
'miconic-simpleadl:s20-1.pddl',
'miconic-simpleadl:s20-2.pddl',
'miconic-simpleadl:s20-3.pddl',
'miconic-simpleadl:s20-4.pddl',
'miconic-simpleadl:s21-0.pddl',
'miconic-simpleadl:s21-1.pddl',
'miconic-simpleadl:s21-2.pddl',
'miconic-simpleadl:s21-3.pddl',
'miconic-simpleadl:s21-4.pddl',
'miconic-simpleadl:s22-0.pddl',
'miconic-simpleadl:s22-1.pddl',
'miconic-simpleadl:s22-2.pddl',
'miconic-simpleadl:s22-3.pddl',
'miconic-simpleadl:s22-4.pddl',
'miconic-simpleadl:s23-0.pddl',
'miconic-simpleadl:s23-1.pddl',
'miconic-simpleadl:s23-2.pddl',
'miconic-simpleadl:s23-3.pddl',
'miconic-simpleadl:s23-4.pddl',
'miconic-simpleadl:s24-0.pddl',
'miconic-simpleadl:s24-1.pddl',
'miconic-simpleadl:s24-2.pddl',
'miconic-simpleadl:s24-3.pddl',
'miconic-simpleadl:s24-4.pddl',
'miconic-simpleadl:s25-0.pddl',
'miconic-simpleadl:s25-1.pddl',
'miconic-simpleadl:s25-2.pddl',
'miconic-simpleadl:s25-3.pddl',
'miconic-simpleadl:s25-4.pddl',
'miconic-simpleadl:s26-0.pddl',
'miconic-simpleadl:s26-1.pddl',
'miconic-simpleadl:s26-2.pddl',
'miconic-simpleadl:s26-3.pddl',
'miconic-simpleadl:s26-4.pddl',
'miconic-simpleadl:s27-0.pddl',
'miconic-simpleadl:s27-1.pddl',
'miconic-simpleadl:s27-2.pddl',
'miconic-simpleadl:s27-3.pddl',
'miconic-simpleadl:s27-4.pddl',
'miconic-simpleadl:s28-0.pddl',
'miconic-simpleadl:s28-1.pddl',
'miconic-simpleadl:s28-2.pddl',
'miconic-simpleadl:s28-3.pddl',
'miconic-simpleadl:s28-4.pddl',
'miconic-simpleadl:s29-0.pddl',
'miconic-simpleadl:s29-1.pddl',
'miconic-simpleadl:s29-2.pddl',
'miconic-simpleadl:s29-3.pddl',
'miconic-simpleadl:s29-4.pddl',
'miconic-simpleadl:s3-0.pddl',
'miconic-simpleadl:s3-1.pddl',
'miconic-simpleadl:s3-2.pddl',
'miconic-simpleadl:s3-3.pddl',
'miconic-simpleadl:s3-4.pddl',
'miconic-simpleadl:s30-0.pddl',
'miconic-simpleadl:s30-1.pddl',
'miconic-simpleadl:s30-2.pddl',
'miconic-simpleadl:s30-3.pddl',
'miconic-simpleadl:s30-4.pddl',
'miconic-simpleadl:s4-0.pddl',
'miconic-simpleadl:s4-1.pddl',
'miconic-simpleadl:s4-2.pddl',
'miconic-simpleadl:s4-3.pddl',
'miconic-simpleadl:s4-4.pddl',
'miconic-simpleadl:s5-0.pddl',
'miconic-simpleadl:s5-1.pddl',
'miconic-simpleadl:s5-2.pddl',
'miconic-simpleadl:s5-3.pddl',
'miconic-simpleadl:s5-4.pddl',
'miconic-simpleadl:s6-0.pddl',
'miconic-simpleadl:s6-1.pddl',
'miconic-simpleadl:s6-2.pddl',
'miconic-simpleadl:s6-3.pddl',
'miconic-simpleadl:s6-4.pddl',
'miconic-simpleadl:s7-0.pddl',
'miconic-simpleadl:s7-1.pddl',
'miconic-simpleadl:s7-2.pddl',
'miconic-simpleadl:s7-3.pddl',
'miconic-simpleadl:s7-4.pddl',
'miconic-simpleadl:s8-0.pddl',
'miconic-simpleadl:s8-1.pddl',
'miconic-simpleadl:s8-2.pddl',
'miconic-simpleadl:s8-3.pddl',
'miconic-simpleadl:s8-4.pddl',
'miconic-simpleadl:s9-0.pddl',
'miconic-simpleadl:s9-1.pddl',
'miconic-simpleadl:s9-2.pddl',
'miconic-simpleadl:s9-3.pddl',
'miconic-simpleadl:s9-4.pddl',
'mystery:prob01.pddl',
'mystery:prob02.pddl',
'mystery:prob03.pddl',
'mystery:prob04.pddl',
'mystery:prob05.pddl',
'mystery:prob06.pddl',
'mystery:prob07.pddl',
'mystery:prob08.pddl',
'mystery:prob09.pddl',
'mystery:prob10.pddl',
'mystery:prob11.pddl',
'mystery:prob12.pddl',
'mystery:prob13.pddl',
'mystery:prob14.pddl',
'mystery:prob15.pddl',
'mystery:prob16.pddl',
'mystery:prob17.pddl',
'mystery:prob18.pddl',
'mystery:prob19.pddl',
'mystery:prob20.pddl',
'mystery:prob21.pddl',
'mystery:prob22.pddl',
'mystery:prob23.pddl',
'mystery:prob24.pddl',
'mystery:prob25.pddl',
'mystery:prob26.pddl',
'mystery:prob27.pddl',
'mystery:prob28.pddl',
'mystery:prob29.pddl',
'mystery:prob30.pddl',
'nomystery-opt11-strips:p01.pddl',
'nomystery-opt11-strips:p02.pddl',
'nomystery-opt11-strips:p03.pddl',
'nomystery-opt11-strips:p04.pddl',
'nomystery-opt11-strips:p05.pddl',
'nomystery-opt11-strips:p06.pddl',
'nomystery-opt11-strips:p07.pddl',
'nomystery-opt11-strips:p08.pddl',
'nomystery-opt11-strips:p09.pddl',
'nomystery-opt11-strips:p10.pddl',
'nomystery-opt11-strips:p11.pddl',
'nomystery-opt11-strips:p12.pddl',
'nomystery-opt11-strips:p13.pddl',
'nomystery-opt11-strips:p14.pddl',
'nomystery-opt11-strips:p15.pddl',
'nomystery-opt11-strips:p16.pddl',
'nomystery-opt11-strips:p17.pddl',
'nomystery-opt11-strips:p18.pddl',
'nomystery-opt11-strips:p19.pddl',
'nomystery-opt11-strips:p20.pddl',
'nomystery-sat11-strips:p01.pddl',
'nomystery-sat11-strips:p02.pddl',
'nomystery-sat11-strips:p03.pddl',
'nomystery-sat11-strips:p04.pddl',
'nomystery-sat11-strips:p05.pddl',
'nomystery-sat11-strips:p06.pddl',
'nomystery-sat11-strips:p07.pddl',
'nomystery-sat11-strips:p08.pddl',
'nomystery-sat11-strips:p09.pddl',
'nomystery-sat11-strips:p10.pddl',
'nomystery-sat11-strips:p11.pddl',
'nomystery-sat11-strips:p12.pddl',
'nomystery-sat11-strips:p13.pddl',
'nomystery-sat11-strips:p14.pddl',
'nomystery-sat11-strips:p15.pddl',
'nomystery-sat11-strips:p16.pddl',
'nomystery-sat11-strips:p17.pddl',
'nomystery-sat11-strips:p18.pddl',
'nomystery-sat11-strips:p19.pddl',
'nomystery-sat11-strips:p20.pddl',
'openstacks-opt14-strips:p20_1.pddl',
'openstacks-opt14-strips:p20_2.pddl',
'openstacks-opt14-strips:p20_3.pddl',
'openstacks-opt14-strips:p25_1.pddl',
'openstacks-opt14-strips:p25_3.pddl',
'openstacks-opt14-strips:p30_1.pddl',
'openstacks-opt14-strips:p30_2.pddl',
'openstacks-opt14-strips:p30_3.pddl',
'openstacks-opt14-strips:p35_1.pddl',
'openstacks-opt14-strips:p35_2.pddl',
'openstacks-opt14-strips:p35_3.pddl',
'openstacks-opt14-strips:p40_1.pddl',
'openstacks-opt14-strips:p40_2.pddl',
'openstacks-opt14-strips:p40_3.pddl',
'openstacks-opt14-strips:p45_1.pddl',
'openstacks-opt14-strips:p45_2.pddl',
'openstacks-opt14-strips:p45_3.pddl',
'openstacks-opt14-strips:p50_1.pddl',
'openstacks-opt14-strips:p50_2.pddl',
'openstacks-opt14-strips:p50_3.pddl',
'openstacks-sat14-strips:p170_2.pddl',
'openstacks-sat14-strips:p170_3.pddl',
'openstacks-sat14-strips:p190_1.pddl',
'openstacks-sat14-strips:p190_2.pddl',
'openstacks-sat14-strips:p190_3.pddl',
'openstacks-sat14-strips:p210_1.pddl',
'openstacks-sat14-strips:p210_2.pddl',
'openstacks-sat14-strips:p210_3.pddl',
'openstacks-sat14-strips:p230_1.pddl',
'openstacks-sat14-strips:p230_2.pddl',
'openstacks-sat14-strips:p230_3.pddl',
'openstacks-sat14-strips:p250_1.pddl',
'openstacks-sat14-strips:p250_2.pddl',
'openstacks-sat14-strips:p250_3.pddl',
'openstacks-sat14-strips:p270_1.pddl',
'openstacks-sat14-strips:p270_2.pddl',
'openstacks-sat14-strips:p270_3.pddl',
'openstacks-sat14-strips:p290_1.pddl',
'openstacks-sat14-strips:p290_2.pddl',
'openstacks-sat14-strips:p290_3.pddl',
'parcprinter-opt11-strips:p01.pddl',
'parcprinter-opt11-strips:p02.pddl',
'parcprinter-opt11-strips:p03.pddl',
'parcprinter-opt11-strips:p04.pddl',
'parcprinter-opt11-strips:p05.pddl',
'parcprinter-opt11-strips:p06.pddl',
'parcprinter-opt11-strips:p07.pddl',
'parcprinter-opt11-strips:p08.pddl',
'parcprinter-opt11-strips:p09.pddl',
'parcprinter-opt11-strips:p10.pddl',
'parcprinter-opt11-strips:p11.pddl',
'parcprinter-opt11-strips:p12.pddl',
'parcprinter-opt11-strips:p13.pddl',
'parcprinter-opt11-strips:p14.pddl',
'parcprinter-opt11-strips:p15.pddl',
'parcprinter-opt11-strips:p16.pddl',
'parcprinter-opt11-strips:p17.pddl',
'parcprinter-opt11-strips:p18.pddl',
'parcprinter-opt11-strips:p19.pddl',
'parcprinter-opt11-strips:p20.pddl',
'parcprinter-sat11-strips:p01.pddl',
'parcprinter-sat11-strips:p02.pddl',
'parcprinter-sat11-strips:p03.pddl',
'parcprinter-sat11-strips:p04.pddl',
'parcprinter-sat11-strips:p05.pddl',
'parcprinter-sat11-strips:p06.pddl',
'parcprinter-sat11-strips:p07.pddl',
'parcprinter-sat11-strips:p08.pddl',
'parcprinter-sat11-strips:p09.pddl',
'parcprinter-sat11-strips:p10.pddl',
'parcprinter-sat11-strips:p11.pddl',
'parcprinter-sat11-strips:p12.pddl',
'parcprinter-sat11-strips:p13.pddl',
'parcprinter-sat11-strips:p14.pddl',
'parcprinter-sat11-strips:p15.pddl',
'parcprinter-sat11-strips:p16.pddl',
'parcprinter-sat11-strips:p17.pddl',
'parcprinter-sat11-strips:p18.pddl',
'parcprinter-sat11-strips:p19.pddl',
'parcprinter-sat11-strips:p20.pddl',
'parking-opt14-strips:p_12_7-01.pddl',
'parking-opt14-strips:p_12_7-02.pddl',
'parking-opt14-strips:p_12_7-03.pddl',
'parking-opt14-strips:p_12_7-04.pddl',
'parking-opt14-strips:p_14_8-01.pddl',
'parking-opt14-strips:p_14_8-02.pddl',
'parking-opt14-strips:p_14_8-03.pddl',
'parking-opt14-strips:p_14_8-04.pddl',
'parking-opt14-strips:p_16_9-01.pddl',
'parking-opt14-strips:p_16_9-02.pddl',
'parking-opt14-strips:p_16_9-03.pddl',
'parking-opt14-strips:p_16_9-04.pddl',
'parking-opt14-strips:p_18_10-01.pddl',
'parking-opt14-strips:p_18_10-02.pddl',
'parking-opt14-strips:p_18_10-03.pddl',
'parking-opt14-strips:p_18_10-04.pddl',
'parking-opt14-strips:p_20_11-01.pddl',
'parking-opt14-strips:p_20_11-02.pddl',
'parking-opt14-strips:p_20_11-03.pddl',
'parking-opt14-strips:p_20_11-04.pddl',
'parking-sat14-strips:p_28_2.pddl',
'parking-sat14-strips:p_28_3.pddl',
'parking-sat14-strips:p_30_1.pddl',
'parking-sat14-strips:p_30_2.pddl',
'parking-sat14-strips:p_30_3.pddl',
'parking-sat14-strips:p_32_1.pddl',
'parking-sat14-strips:p_32_2.pddl',
'parking-sat14-strips:p_32_3.pddl',
'parking-sat14-strips:p_34_1.pddl',
'parking-sat14-strips:p_34_2.pddl',
'parking-sat14-strips:p_34_3.pddl',
'parking-sat14-strips:p_36_1.pddl',
'parking-sat14-strips:p_36_2.pddl',
'parking-sat14-strips:p_36_3.pddl',
'parking-sat14-strips:p_38_1.pddl',
'parking-sat14-strips:p_38_2.pddl',
'parking-sat14-strips:p_38_3.pddl',
'parking-sat14-strips:p_40_1.pddl',
'parking-sat14-strips:p_40_2.pddl',
'parking-sat14-strips:p_40_3.pddl',
'pathways:p01.pddl',
'pathways:p02.pddl',
'pathways:p03.pddl',
'pathways:p04.pddl',
'pathways:p05.pddl',
'pathways:p06.pddl',
'pathways:p07.pddl',
'pathways:p08.pddl',
'pathways:p09.pddl',
'pathways:p10.pddl',
'pathways:p11.pddl',
'pathways:p12.pddl',
'pathways:p13.pddl',
'pathways:p14.pddl',
'pathways:p15.pddl',
'pathways:p16.pddl',
'pathways:p17.pddl',
'pathways:p18.pddl',
'pathways:p19.pddl',
'pathways:p20.pddl',
'pathways:p21.pddl',
'pathways:p22.pddl',
'pathways:p23.pddl',
'pathways:p24.pddl',
'pathways:p25.pddl',
'pathways:p26.pddl',
'pathways:p27.pddl',
'pathways:p28.pddl',
'pathways:p29.pddl',
'pathways:p30.pddl',
'pathways-noneg:p01.pddl',
'pathways-noneg:p02.pddl',
'pathways-noneg:p03.pddl',
'pathways-noneg:p04.pddl',
'pathways-noneg:p05.pddl',
'pathways-noneg:p06.pddl',
'pathways-noneg:p07.pddl',
'pathways-noneg:p08.pddl',
'pathways-noneg:p09.pddl',
'pathways-noneg:p10.pddl',
'pathways-noneg:p11.pddl',
'pathways-noneg:p12.pddl',
'pathways-noneg:p13.pddl',
'pathways-noneg:p14.pddl',
'pathways-noneg:p15.pddl',
'pathways-noneg:p16.pddl',
'pathways-noneg:p17.pddl',
'pathways-noneg:p18.pddl',
'pathways-noneg:p19.pddl',
'pathways-noneg:p20.pddl',
'pathways-noneg:p21.pddl',
'pathways-noneg:p22.pddl',
'pathways-noneg:p23.pddl',
'pathways-noneg:p24.pddl',
'pathways-noneg:p25.pddl',
'pathways-noneg:p26.pddl',
'pathways-noneg:p27.pddl',
'pathways-noneg:p28.pddl',
'pathways-noneg:p29.pddl',
'pathways-noneg:p30.pddl',
'pegsol-opt11-strips:p01.pddl',
'pegsol-opt11-strips:p02.pddl',
'pegsol-opt11-strips:p03.pddl',
'pegsol-opt11-strips:p04.pddl',
'pegsol-opt11-strips:p05.pddl',
'pegsol-opt11-strips:p06.pddl',
'pegsol-opt11-strips:p07.pddl',
'pegsol-opt11-strips:p08.pddl',
'pegsol-opt11-strips:p09.pddl',
'pegsol-opt11-strips:p10.pddl',
'pegsol-opt11-strips:p11.pddl',
'pegsol-opt11-strips:p12.pddl',
'pegsol-opt11-strips:p13.pddl',
'pegsol-opt11-strips:p14.pddl',
'pegsol-opt11-strips:p15.pddl',
'pegsol-opt11-strips:p16.pddl',
'pegsol-opt11-strips:p17.pddl',
'pegsol-opt11-strips:p18.pddl',
'pegsol-opt11-strips:p19.pddl',
'pegsol-opt11-strips:p20.pddl',
'pegsol-sat11-strips:p01.pddl',
'pegsol-sat11-strips:p02.pddl',
'pegsol-sat11-strips:p03.pddl',
'pegsol-sat11-strips:p04.pddl',
'pegsol-sat11-strips:p05.pddl',
'pegsol-sat11-strips:p06.pddl',
'pegsol-sat11-strips:p07.pddl',
'pegsol-sat11-strips:p08.pddl',
'pegsol-sat11-strips:p09.pddl',
'pegsol-sat11-strips:p10.pddl',
'pegsol-sat11-strips:p11.pddl',
'pegsol-sat11-strips:p12.pddl',
'pegsol-sat11-strips:p13.pddl',
'pegsol-sat11-strips:p14.pddl',
'pegsol-sat11-strips:p15.pddl',
'pegsol-sat11-strips:p16.pddl',
'pegsol-sat11-strips:p17.pddl',
'pegsol-sat11-strips:p18.pddl',
'pegsol-sat11-strips:p19.pddl',
'pegsol-sat11-strips:p20.pddl',
'pipesworld-notankage:p01-net1-b6-g2.pddl',
'pipesworld-notankage:p02-net1-b6-g4.pddl',
'pipesworld-notankage:p03-net1-b8-g3.pddl',
'pipesworld-notankage:p04-net1-b8-g5.pddl',
'pipesworld-notankage:p05-net1-b10-g4.pddl',
'pipesworld-notankage:p06-net1-b10-g6.pddl',
'pipesworld-notankage:p07-net1-b12-g5.pddl',
'pipesworld-notankage:p08-net1-b12-g7.pddl',
'pipesworld-notankage:p09-net1-b14-g6.pddl',
'pipesworld-notankage:p10-net1-b14-g8.pddl',
'pipesworld-notankage:p11-net2-b10-g2.pddl',
'pipesworld-notankage:p12-net2-b10-g4.pddl',
'pipesworld-notankage:p13-net2-b12-g3.pddl',
'pipesworld-notankage:p14-net2-b12-g5.pddl',
'pipesworld-notankage:p15-net2-b14-g4.pddl',
'pipesworld-notankage:p16-net2-b14-g6.pddl',
'pipesworld-notankage:p17-net2-b16-g5.pddl',
'pipesworld-notankage:p18-net2-b16-g7.pddl',
'pipesworld-notankage:p19-net2-b18-g6.pddl',
'pipesworld-notankage:p20-net2-b18-g8.pddl',
'pipesworld-notankage:p21-net3-b12-g2.pddl',
'pipesworld-notankage:p22-net3-b12-g4.pddl',
'pipesworld-notankage:p23-net3-b14-g3.pddl',
'pipesworld-notankage:p24-net3-b14-g5.pddl',
'pipesworld-notankage:p25-net3-b16-g5.pddl',
'pipesworld-notankage:p26-net3-b16-g7.pddl',
'pipesworld-notankage:p27-net3-b18-g6.pddl',
'pipesworld-notankage:p28-net3-b18-g7.pddl',
'pipesworld-notankage:p29-net3-b20-g6.pddl',
'pipesworld-notankage:p30-net3-b20-g8.pddl',
'pipesworld-notankage:p31-net4-b14-g3.pddl',
'pipesworld-notankage:p32-net4-b14-g5.pddl',
'pipesworld-notankage:p33-net4-b16-g5.pddl',
'pipesworld-notankage:p34-net4-b16-g6.pddl',
'pipesworld-notankage:p35-net4-b18-g4.pddl',
'pipesworld-notankage:p36-net4-b18-g6.pddl',
'pipesworld-notankage:p37-net4-b20-g5.pddl',
'pipesworld-notankage:p38-net4-b20-g7.pddl',
'pipesworld-notankage:p39-net4-b22-g7.pddl',
'pipesworld-notankage:p40-net4-b22-g8.pddl',
'pipesworld-notankage:p41-net5-b22-g2.pddl',
'pipesworld-notankage:p42-net5-b22-g4.pddl',
'pipesworld-notankage:p43-net5-b24-g3.pddl',
'pipesworld-notankage:p44-net5-b24-g5.pddl',
'pipesworld-notankage:p45-net5-b26-g4.pddl',
'pipesworld-notankage:p46-net5-b26-g6.pddl',
'pipesworld-notankage:p47-net5-b28-g5.pddl',
'pipesworld-notankage:p48-net5-b28-g7.pddl',
'pipesworld-notankage:p49-net5-b30-g6.pddl',
'pipesworld-notankage:p50-net5-b30-g8.pddl',
'pipesworld-tankage:p01-net1-b6-g2-t50.pddl',
'pipesworld-tankage:p02-net1-b6-g4-t50.pddl',
'pipesworld-tankage:p03-net1-b8-g3-t80.pddl',
'pipesworld-tankage:p04-net1-b8-g5-t80.pddl',
'pipesworld-tankage:p05-net1-b10-g4-t50.pddl',
'pipesworld-tankage:p06-net1-b10-g6-t50.pddl',
'pipesworld-tankage:p07-net1-b12-g5-t80.pddl',
'pipesworld-tankage:p08-net1-b12-g7-t80.pddl',
'pipesworld-tankage:p09-net1-b14-g6-t50.pddl',
'pipesworld-tankage:p10-net1-b14-g8-t50.pddl',
'pipesworld-tankage:p11-net2-b10-g2-t30.pddl',
'pipesworld-tankage:p12-net2-b10-g4-t60.pddl',
'pipesworld-tankage:p13-net2-b12-g3-t70.pddl',
'pipesworld-tankage:p14-net2-b12-g5-t30.pddl',
'pipesworld-tankage:p15-net2-b14-g4-t30.pddl',
'pipesworld-tankage:p16-net2-b14-g6-t80.pddl',
'pipesworld-tankage:p17-net2-b16-g5-t20.pddl',
'pipesworld-tankage:p18-net2-b16-g7-t60.pddl',
'pipesworld-tankage:p19-net2-b18-g6-t60.pddl',
'pipesworld-tankage:p20-net2-b18-g8-t90.pddl',
'pipesworld-tankage:p21-net3-b12-g2-t60.pddl',
'pipesworld-tankage:p22-net3-b12-g4-t60.pddl',
'pipesworld-tankage:p23-net3-b14-g3-t60.pddl',
'pipesworld-tankage:p24-net3-b14-g5-t60.pddl',
'pipesworld-tankage:p25-net3-b16-g5-t60.pddl',
'pipesworld-tankage:p26-net3-b16-g7-t70.pddl',
'pipesworld-tankage:p27-net3-b18-g6-t70.pddl',
'pipesworld-tankage:p28-net3-b18-g7-t70.pddl',
'pipesworld-tankage:p29-net3-b20-g6-t70.pddl',
'pipesworld-tankage:p30-net3-b20-g8-t70.pddl',
'pipesworld-tankage:p31-net4-b14-g3-t20.pddl',
'pipesworld-tankage:p32-net4-b14-g5-t30.pddl',
'pipesworld-tankage:p33-net4-b16-g5-t60.pddl',
'pipesworld-tankage:p34-net4-b16-g6-t60.pddl',
'pipesworld-tankage:p35-net4-b18-g4-t90.pddl',
'pipesworld-tankage:p36-net4-b18-g6-t90.pddl',
'pipesworld-tankage:p37-net4-b20-g5-t60.pddl',
'pipesworld-tankage:p38-net4-b20-g7-t60.pddl',
'pipesworld-tankage:p39-net4-b22-g7-t50.pddl',
'pipesworld-tankage:p40-net4-b22-g8-t50.pddl',
'pipesworld-tankage:p41-net5-b22-g2-t20.pddl',
'pipesworld-tankage:p42-net5-b22-g4-t50.pddl',
'pipesworld-tankage:p43-net5-b24-g3-t80.pddl',
'pipesworld-tankage:p44-net5-b24-g5-t80.pddl',
'pipesworld-tankage:p45-net5-b26-g4-t50.pddl',
'pipesworld-tankage:p46-net5-b26-g6-t50.pddl',
'pipesworld-tankage:p47-net5-b28-g5-t50.pddl',
'pipesworld-tankage:p48-net5-b28-g7-t50.pddl',
'pipesworld-tankage:p49-net5-b30-g6-t50.pddl',
'pipesworld-tankage:p50-net5-b30-g8-t50.pddl',
'psr-small:p01-s2-n1-l2-f50.pddl',
'psr-small:p02-s5-n1-l3-f30.pddl',
'psr-small:p03-s7-n1-l3-f70.pddl',
'psr-small:p04-s8-n1-l4-f10.pddl',
'psr-small:p05-s9-n1-l4-f30.pddl',
'psr-small:p06-s10-n1-l4-f50.pddl',
'psr-small:p07-s11-n1-l4-f70.pddl',
'psr-small:p08-s12-n1-l5-f10.pddl',
'psr-small:p09-s13-n1-l5-f30.pddl',
'psr-small:p10-s17-n2-l2-f30.pddl',
'psr-small:p11-s18-n2-l2-f50.pddl',
'psr-small:p12-s21-n2-l3-f30.pddl',
'psr-small:p13-s22-n2-l3-f50.pddl',
'psr-small:p14-s23-n2-l3-f70.pddl',
'psr-small:p15-s24-n2-l4-f10.pddl',
'psr-small:p16-s29-n2-l5-f30.pddl',
'psr-small:p17-s30-n2-l5-f50.pddl',
'psr-small:p18-s31-n2-l5-f70.pddl',
'psr-small:p19-s33-n3-l2-f30.pddl',
'psr-small:p20-s34-n3-l2-f50.pddl',
'psr-small:p21-s35-n3-l2-f70.pddl',
'psr-small:p22-s37-n3-l3-f30.pddl',
'psr-small:p23-s38-n3-l3-f50.pddl',
'psr-small:p24-s39-n3-l3-f70.pddl',
'psr-small:p25-s40-n3-l4-f10.pddl',
'psr-small:p26-s41-n3-l4-f30.pddl',
'psr-small:p27-s42-n3-l4-f50.pddl',
'psr-small:p28-s43-n3-l4-f70.pddl',
'psr-small:p29-s45-n3-l5-f30.pddl',
'psr-small:p30-s46-n3-l5-f50.pddl',
'psr-small:p31-s49-n4-l2-f30.pddl',
'psr-small:p32-s50-n4-l2-f50.pddl',
'psr-small:p33-s51-n4-l2-f70.pddl',
'psr-small:p34-s55-n4-l3-f70.pddl',
'psr-small:p35-s57-n5-l2-f30.pddl',
'psr-small:p36-s65-n6-l2-f30.pddl',
'psr-small:p37-s67-n6-l2-f70.pddl',
'psr-small:p38-s78-n3-l3-f50.pddl',
'psr-small:p39-s79-n3-l3-f70.pddl',
'psr-small:p40-s80-n3-l4-f10.pddl',
'psr-small:p41-s81-n3-l4-f30.pddl',
'psr-small:p42-s82-n3-l4-f50.pddl',
'psr-small:p43-s83-n3-l4-f70.pddl',
'psr-small:p44-s89-n4-l2-f30.pddl',
'psr-small:p45-s94-n4-l3-f50.pddl',
'psr-small:p46-s97-n5-l2-f30.pddl',
'psr-small:p47-s98-n5-l2-f50.pddl',
'psr-small:p48-s101-n5-l3-f30.pddl',
'psr-small:p49-s105-n6-l2-f30.pddl',
'psr-small:p50-s107-n6-l2-f70.pddl',
'rovers:p01.pddl',
'rovers:p02.pddl',
'rovers:p03.pddl',
'rovers:p04.pddl',
'rovers:p05.pddl',
'rovers:p06.pddl',
'rovers:p07.pddl',
'rovers:p08.pddl',
'rovers:p09.pddl',
'rovers:p10.pddl',
'rovers:p11.pddl',
'rovers:p12.pddl',
'rovers:p13.pddl',
'rovers:p14.pddl',
'rovers:p15.pddl',
'rovers:p16.pddl',
'rovers:p17.pddl',
'rovers:p18.pddl',
'rovers:p19.pddl',
'rovers:p20.pddl',
'rovers:p21.pddl',
'rovers:p22.pddl',
'rovers:p23.pddl',
'rovers:p24.pddl',
'rovers:p25.pddl',
'rovers:p26.pddl',
'rovers:p27.pddl',
'rovers:p28.pddl',
'rovers:p29.pddl',
'rovers:p30.pddl',
'rovers:p31.pddl',
'rovers:p32.pddl',
'rovers:p33.pddl',
'rovers:p34.pddl',
'rovers:p35.pddl',
'rovers:p36.pddl',
'rovers:p37.pddl',
'rovers:p38.pddl',
'rovers:p39.pddl',
'rovers:p40.pddl',
'satellite:p01-pfile1.pddl',
'satellite:p02-pfile2.pddl',
'satellite:p03-pfile3.pddl',
'satellite:p04-pfile4.pddl',
'satellite:p05-pfile5.pddl',
'satellite:p06-pfile6.pddl',
'satellite:p07-pfile7.pddl',
'satellite:p08-pfile8.pddl',
'satellite:p09-pfile9.pddl',
'satellite:p10-pfile10.pddl',
'satellite:p11-pfile11.pddl',
'satellite:p12-pfile12.pddl',
'satellite:p13-pfile13.pddl',
'satellite:p14-pfile14.pddl',
'satellite:p15-pfile15.pddl',
'satellite:p16-pfile16.pddl',
'satellite:p17-pfile17.pddl',
'satellite:p18-pfile18.pddl',
'satellite:p19-pfile19.pddl',
'satellite:p20-pfile20.pddl',
'satellite:p21-HC-pfile1.pddl',
'satellite:p22-HC-pfile2.pddl',
'satellite:p23-HC-pfile3.pddl',
'satellite:p24-HC-pfile4.pddl',
'satellite:p25-HC-pfile5.pddl',
'satellite:p26-HC-pfile6.pddl',
'satellite:p27-HC-pfile7.pddl',
'satellite:p28-HC-pfile8.pddl',
'satellite:p29-HC-pfile9.pddl',
'satellite:p30-HC-pfile10.pddl',
'satellite:p31-HC-pfile11.pddl',
'satellite:p32-HC-pfile12.pddl',
'satellite:p33-HC-pfile13.pddl',
'satellite:p34-HC-pfile14.pddl',
'satellite:p35-HC-pfile15.pddl',
'satellite:p36-HC-pfile16.pddl',
'scanalyzer-opt11-strips:p01.pddl',
'scanalyzer-opt11-strips:p02.pddl',
'scanalyzer-opt11-strips:p03.pddl',
'scanalyzer-opt11-strips:p04.pddl',
'scanalyzer-opt11-strips:p05.pddl',
'scanalyzer-opt11-strips:p06.pddl',
'scanalyzer-opt11-strips:p07.pddl',
'scanalyzer-opt11-strips:p08.pddl',
'scanalyzer-opt11-strips:p09.pddl',
'scanalyzer-opt11-strips:p10.pddl',
'scanalyzer-opt11-strips:p11.pddl',
'scanalyzer-opt11-strips:p12.pddl',
'scanalyzer-opt11-strips:p13.pddl',
'scanalyzer-opt11-strips:p14.pddl',
'scanalyzer-opt11-strips:p15.pddl',
'scanalyzer-opt11-strips:p16.pddl',
'scanalyzer-opt11-strips:p17.pddl',
'scanalyzer-opt11-strips:p18.pddl',
'scanalyzer-opt11-strips:p19.pddl',
'scanalyzer-opt11-strips:p20.pddl',
'scanalyzer-sat11-strips:p01.pddl',
'scanalyzer-sat11-strips:p02.pddl',
'scanalyzer-sat11-strips:p03.pddl',
'scanalyzer-sat11-strips:p04.pddl',
'scanalyzer-sat11-strips:p05.pddl',
'scanalyzer-sat11-strips:p06.pddl',
'scanalyzer-sat11-strips:p07.pddl',
'scanalyzer-sat11-strips:p08.pddl',
'scanalyzer-sat11-strips:p09.pddl',
'scanalyzer-sat11-strips:p10.pddl',
'scanalyzer-sat11-strips:p11.pddl',
'scanalyzer-sat11-strips:p12.pddl',
'scanalyzer-sat11-strips:p13.pddl',
'scanalyzer-sat11-strips:p14.pddl',
'scanalyzer-sat11-strips:p15.pddl',
'scanalyzer-sat11-strips:p16.pddl',
'scanalyzer-sat11-strips:p17.pddl',
'scanalyzer-sat11-strips:p18.pddl',
'scanalyzer-sat11-strips:p19.pddl',
'scanalyzer-sat11-strips:p20.pddl',
'schedule:probschedule-10-0.pddl',
'schedule:probschedule-10-1.pddl',
'schedule:probschedule-10-2.pddl',
'schedule:probschedule-11-0.pddl',
'schedule:probschedule-11-1.pddl',
'schedule:probschedule-11-2.pddl',
'schedule:probschedule-12-0.pddl',
'schedule:probschedule-12-1.pddl',
'schedule:probschedule-12-2.pddl',
'schedule:probschedule-13-0.pddl',
'schedule:probschedule-13-1.pddl',
'schedule:probschedule-13-2.pddl',
'schedule:probschedule-14-0.pddl',
'schedule:probschedule-14-1.pddl',
'schedule:probschedule-14-2.pddl',
'schedule:probschedule-15-0.pddl',
'schedule:probschedule-15-1.pddl',
'schedule:probschedule-15-2.pddl',
'schedule:probschedule-16-0.pddl',
'schedule:probschedule-16-1.pddl',
'schedule:probschedule-16-2.pddl',
'schedule:probschedule-17-0.pddl',
'schedule:probschedule-17-1.pddl',
'schedule:probschedule-17-2.pddl',
'schedule:probschedule-18-0.pddl',
'schedule:probschedule-18-1.pddl',
'schedule:probschedule-18-2.pddl',
'schedule:probschedule-19-0.pddl',
'schedule:probschedule-19-1.pddl',
'schedule:probschedule-19-2.pddl',
'schedule:probschedule-2-0.pddl',
'schedule:probschedule-2-1.pddl',
'schedule:probschedule-2-2.pddl',
'schedule:probschedule-20-0.pddl',
'schedule:probschedule-20-1.pddl',
'schedule:probschedule-20-2.pddl',
'schedule:probschedule-21-0.pddl',
'schedule:probschedule-21-1.pddl',
'schedule:probschedule-21-2.pddl',
'schedule:probschedule-22-0.pddl',
'schedule:probschedule-22-1.pddl',
'schedule:probschedule-22-2.pddl',
'schedule:probschedule-23-0.pddl',
'schedule:probschedule-23-1.pddl',
'schedule:probschedule-23-2.pddl',
'schedule:probschedule-24-0.pddl',
'schedule:probschedule-24-1.pddl',
'schedule:probschedule-24-2.pddl',
'schedule:probschedule-25-0.pddl',
'schedule:probschedule-25-1.pddl',
'schedule:probschedule-25-2.pddl',
'schedule:probschedule-26-0.pddl',
'schedule:probschedule-26-1.pddl',
'schedule:probschedule-26-2.pddl',
'schedule:probschedule-27-0.pddl',
'schedule:probschedule-27-1.pddl',
'schedule:probschedule-27-2.pddl',
'schedule:probschedule-28-0.pddl',
'schedule:probschedule-28-1.pddl',
'schedule:probschedule-28-2.pddl',
'schedule:probschedule-29-0.pddl',
'schedule:probschedule-29-1.pddl',
'schedule:probschedule-29-2.pddl',
'schedule:probschedule-3-0.pddl',
'schedule:probschedule-3-1.pddl',
'schedule:probschedule-3-2.pddl',
'schedule:probschedule-30-0.pddl',
'schedule:probschedule-30-1.pddl',
'schedule:probschedule-30-2.pddl',
'schedule:probschedule-31-0.pddl',
'schedule:probschedule-31-1.pddl',
'schedule:probschedule-31-2.pddl',
'schedule:probschedule-32-0.pddl',
'schedule:probschedule-32-1.pddl',
'schedule:probschedule-32-2.pddl',
'schedule:probschedule-33-0.pddl',
'schedule:probschedule-33-1.pddl',
'schedule:probschedule-33-2.pddl',
'schedule:probschedule-34-0.pddl',
'schedule:probschedule-34-1.pddl',
'schedule:probschedule-34-2.pddl',
'schedule:probschedule-35-0.pddl',
'schedule:probschedule-35-1.pddl',
'schedule:probschedule-35-2.pddl',
'schedule:probschedule-36-0.pddl',
'schedule:probschedule-36-1.pddl',
'schedule:probschedule-36-2.pddl',
'schedule:probschedule-37-0.pddl',
'schedule:probschedule-37-1.pddl',
'schedule:probschedule-37-2.pddl',
'schedule:probschedule-38-0.pddl',
'schedule:probschedule-38-1.pddl',
'schedule:probschedule-38-2.pddl',
'schedule:probschedule-39-0.pddl',
'schedule:probschedule-39-1.pddl',
'schedule:probschedule-39-2.pddl',
'schedule:probschedule-4-0.pddl',
'schedule:probschedule-4-1.pddl',
'schedule:probschedule-4-2.pddl',
'schedule:probschedule-40-0.pddl',
'schedule:probschedule-40-1.pddl',
'schedule:probschedule-40-2.pddl',
'schedule:probschedule-41-0.pddl',
'schedule:probschedule-41-1.pddl',
'schedule:probschedule-41-2.pddl',
'schedule:probschedule-42-0.pddl',
'schedule:probschedule-42-1.pddl',
'schedule:probschedule-42-2.pddl',
'schedule:probschedule-43-0.pddl',
'schedule:probschedule-43-1.pddl',
'schedule:probschedule-43-2.pddl',
'schedule:probschedule-44-0.pddl',
'schedule:probschedule-44-1.pddl',
'schedule:probschedule-44-2.pddl',
'schedule:probschedule-45-0.pddl',
'schedule:probschedule-45-1.pddl',
'schedule:probschedule-45-2.pddl',
'schedule:probschedule-46-0.pddl',
'schedule:probschedule-46-1.pddl',
'schedule:probschedule-46-2.pddl',
'schedule:probschedule-47-0.pddl',
'schedule:probschedule-47-1.pddl',
'schedule:probschedule-47-2.pddl',
'schedule:probschedule-48-0.pddl',
'schedule:probschedule-48-1.pddl',
'schedule:probschedule-48-2.pddl',
'schedule:probschedule-49-0.pddl',
'schedule:probschedule-49-1.pddl',
'schedule:probschedule-49-2.pddl',
'schedule:probschedule-5-0.pddl',
'schedule:probschedule-5-1.pddl',
'schedule:probschedule-5-2.pddl',
'schedule:probschedule-50-0.pddl',
'schedule:probschedule-50-1.pddl',
'schedule:probschedule-50-2.pddl',
'schedule:probschedule-51-0.pddl',
'schedule:probschedule-51-1.pddl',
'schedule:probschedule-51-2.pddl',
'schedule:probschedule-6-0.pddl',
'schedule:probschedule-6-1.pddl',
'schedule:probschedule-6-2.pddl',
'schedule:probschedule-7-0.pddl',
'schedule:probschedule-7-1.pddl',
'schedule:probschedule-7-2.pddl',
'schedule:probschedule-8-0.pddl',
'schedule:probschedule-8-1.pddl',
'schedule:probschedule-8-2.pddl',
'schedule:probschedule-9-0.pddl',
'schedule:probschedule-9-1.pddl',
'schedule:probschedule-9-2.pddl',
'sokoban-opt11-strips:p01.pddl',
'sokoban-opt11-strips:p02.pddl',
'sokoban-opt11-strips:p03.pddl',
'sokoban-opt11-strips:p04.pddl',
'sokoban-opt11-strips:p05.pddl',
'sokoban-opt11-strips:p06.pddl',
'sokoban-opt11-strips:p07.pddl',
'sokoban-opt11-strips:p08.pddl',
'sokoban-opt11-strips:p09.pddl',
'sokoban-opt11-strips:p10.pddl',
'sokoban-opt11-strips:p11.pddl',
'sokoban-opt11-strips:p12.pddl',
'sokoban-opt11-strips:p13.pddl',
'sokoban-opt11-strips:p14.pddl',
'sokoban-opt11-strips:p15.pddl',
'sokoban-opt11-strips:p16.pddl',
'sokoban-opt11-strips:p17.pddl',
'sokoban-opt11-strips:p18.pddl',
'sokoban-opt11-strips:p19.pddl',
'sokoban-opt11-strips:p20.pddl',
'sokoban-sat11-strips:p01.pddl',
'sokoban-sat11-strips:p02.pddl',
'sokoban-sat11-strips:p03.pddl',
'sokoban-sat11-strips:p04.pddl',
'sokoban-sat11-strips:p05.pddl',
'sokoban-sat11-strips:p06.pddl',
'sokoban-sat11-strips:p07.pddl',
'sokoban-sat11-strips:p08.pddl',
'sokoban-sat11-strips:p09.pddl',
'sokoban-sat11-strips:p10.pddl',
'sokoban-sat11-strips:p11.pddl',
'sokoban-sat11-strips:p12.pddl',
'sokoban-sat11-strips:p13.pddl',
'sokoban-sat11-strips:p14.pddl',
'sokoban-sat11-strips:p15.pddl',
'sokoban-sat11-strips:p16.pddl',
'sokoban-sat11-strips:p17.pddl',
'sokoban-sat11-strips:p18.pddl',
'sokoban-sat11-strips:p19.pddl',
'sokoban-sat11-strips:p20.pddl',
'storage:p01.pddl',
'storage:p02.pddl',
'storage:p03.pddl',
'storage:p04.pddl',
'storage:p05.pddl',
'storage:p06.pddl',
'storage:p07.pddl',
'storage:p08.pddl',
'storage:p09.pddl',
'storage:p10.pddl',
'storage:p11.pddl',
'storage:p12.pddl',
'storage:p13.pddl',
'storage:p14.pddl',
'storage:p15.pddl',
'storage:p16.pddl',
'storage:p17.pddl',
'storage:p18.pddl',
'storage:p19.pddl',
'storage:p20.pddl',
'storage:p21.pddl',
'storage:p22.pddl',
'storage:p23.pddl',
'storage:p24.pddl',
'storage:p25.pddl',
'storage:p26.pddl',
'storage:p27.pddl',
'storage:p28.pddl',
'storage:p29.pddl',
'storage:p30.pddl',
'tetris-opt14-strips:p01-10.pddl',
'tetris-opt14-strips:p01-6.pddl',
'tetris-opt14-strips:p01-8.pddl',
'tetris-opt14-strips:p02-10.pddl',
'tetris-opt14-strips:p02-4.pddl',
'tetris-opt14-strips:p02-6.pddl',
'tetris-opt14-strips:p02-8.pddl',
'tetris-opt14-strips:p03-10.pddl',
'tetris-opt14-strips:p03-4.pddl',
'tetris-opt14-strips:p03-6.pddl',
'tetris-opt14-strips:p03-8.pddl',
'tetris-opt14-strips:p04-10.pddl',
'tetris-opt14-strips:p04-6.pddl',
'tetris-opt14-strips:p04-8.pddl',
'tetris-opt14-strips:p05-10.pddl',
'tetris-opt14-strips:p05-6.pddl',
'tetris-opt14-strips:p05-8.pddl',
'tetris-sat14-strips:p020.pddl',
'tetris-sat14-strips:p021.pddl',
'tetris-sat14-strips:p022.pddl',
'tetris-sat14-strips:p023.pddl',
'tetris-sat14-strips:p024.pddl',
'tetris-sat14-strips:p025.pddl',
'tetris-sat14-strips:p026.pddl',
'tetris-sat14-strips:p027.pddl',
'tetris-sat14-strips:p028.pddl',
'tetris-sat14-strips:p029.pddl',
'tetris-sat14-strips:p031.pddl',
'tetris-sat14-strips:p032.pddl',
'tetris-sat14-strips:p033.pddl',
'tetris-sat14-strips:p034.pddl',
'tetris-sat14-strips:p035.pddl',
'tetris-sat14-strips:p036.pddl',
'tetris-sat14-strips:p037.pddl',
'tetris-sat14-strips:p038.pddl',
'tetris-sat14-strips:p039.pddl',
'tetris-sat14-strips:p040.pddl',
'thoughtful-sat14-strips:bootstrap-typed-01.pddl',
'thoughtful-sat14-strips:bootstrap-typed-02.pddl',
'thoughtful-sat14-strips:bootstrap-typed-03.pddl',
'thoughtful-sat14-strips:bootstrap-typed-04.pddl',
'thoughtful-sat14-strips:bootstrap-typed-05.pddl',
'thoughtful-sat14-strips:p11_6_53-typed.pddl',
'thoughtful-sat14-strips:p11_6_59-typed.pddl',
'thoughtful-sat14-strips:p11_6_62-typed.pddl',
'thoughtful-sat14-strips:p13_7_78-typed.pddl',
'thoughtful-sat14-strips:p13_7_79-typed.pddl',
'thoughtful-sat14-strips:p13_7_86-typed.pddl',
'thoughtful-sat14-strips:target-typed-20.pddl',
'thoughtful-sat14-strips:target-typed-21.pddl',
'thoughtful-sat14-strips:target-typed-22.pddl',
'thoughtful-sat14-strips:target-typed-23.pddl',
'thoughtful-sat14-strips:target-typed-24.pddl',
'thoughtful-sat14-strips:target-typed-25.pddl',
'thoughtful-sat14-strips:target-typed-26.pddl',
'thoughtful-sat14-strips:target-typed-27.pddl',
'thoughtful-sat14-strips:target-typed-28.pddl',
'tpp:p01.pddl',
'tpp:p02.pddl',
'tpp:p03.pddl',
'tpp:p04.pddl',
'tpp:p05.pddl',
'tpp:p06.pddl',
'tpp:p07.pddl',
'tpp:p08.pddl',
'tpp:p09.pddl',
'tpp:p10.pddl',
'tpp:p11.pddl',
'tpp:p12.pddl',
'tpp:p13.pddl',
'tpp:p14.pddl',
'tpp:p15.pddl',
'tpp:p16.pddl',
'tpp:p17.pddl',
'tpp:p18.pddl',
'tpp:p19.pddl',
'tpp:p20.pddl',
'tpp:p21.pddl',
'tpp:p22.pddl',
'tpp:p23.pddl',
'tpp:p24.pddl',
'tpp:p25.pddl',
'tpp:p26.pddl',
'tpp:p27.pddl',
'tpp:p28.pddl',
'tpp:p29.pddl',
'tpp:p30.pddl',
'transport-opt14-strips:p01.pddl',
'transport-opt14-strips:p02.pddl',
'transport-opt14-strips:p03.pddl',
'transport-opt14-strips:p05.pddl',
'transport-opt14-strips:p07.pddl',
'transport-opt14-strips:p10.pddl',
'transport-opt14-strips:p11.pddl',
'transport-opt14-strips:p12.pddl',
'transport-opt14-strips:p14.pddl',
'transport-opt14-strips:p16.pddl',
'transport-opt14-strips:p17.pddl',
'transport-opt14-strips:p20.pddl',
'transport-sat14-strips:p02.pddl',
'transport-sat14-strips:p03.pddl',
'transport-sat14-strips:p05.pddl',
'transport-sat14-strips:p06.pddl',
'transport-sat14-strips:p08.pddl',
'transport-sat14-strips:p11.pddl',
'transport-sat14-strips:p12.pddl',
'transport-sat14-strips:p13.pddl',
'transport-sat14-strips:p18.pddl',
'transport-sat14-strips:p20.pddl',
'trucks-strips:p01.pddl',
'trucks-strips:p02.pddl',
'trucks-strips:p03.pddl',
'trucks-strips:p04.pddl',
'trucks-strips:p05.pddl',
'trucks-strips:p06.pddl',
'trucks-strips:p07.pddl',
'trucks-strips:p08.pddl',
'trucks-strips:p09.pddl',
'trucks-strips:p10.pddl',
'trucks-strips:p11.pddl',
'trucks-strips:p12.pddl',
'trucks-strips:p13.pddl',
'trucks-strips:p14.pddl',
'trucks-strips:p15.pddl',
'trucks-strips:p16.pddl',
'trucks-strips:p17.pddl',
'trucks-strips:p18.pddl',
'trucks-strips:p19.pddl',
'trucks-strips:p20.pddl',
'trucks-strips:p21.pddl',
'trucks-strips:p22.pddl',
'trucks-strips:p23.pddl',
'trucks-strips:p24.pddl',
'trucks-strips:p25.pddl',
'trucks-strips:p26.pddl',
'trucks-strips:p27.pddl',
'trucks-strips:p28.pddl',
'trucks-strips:p29.pddl',
'trucks-strips:p30.pddl',
'visitall-opt14-strips:p-05-10.pddl',
'visitall-opt14-strips:p-05-5.pddl',
'visitall-opt14-strips:p-05-6.pddl',
'visitall-opt14-strips:p-05-7.pddl',
'visitall-opt14-strips:p-05-8.pddl',
'visitall-opt14-strips:p-05-9.pddl',
'visitall-opt14-strips:p-1-10.pddl',
'visitall-opt14-strips:p-1-11.pddl',
'visitall-opt14-strips:p-1-12.pddl',
'visitall-opt14-strips:p-1-13.pddl',
'visitall-opt14-strips:p-1-14.pddl',
'visitall-opt14-strips:p-1-15.pddl',
'visitall-opt14-strips:p-1-16.pddl',
'visitall-opt14-strips:p-1-17.pddl',
'visitall-opt14-strips:p-1-18.pddl',
'visitall-opt14-strips:p-1-5.pddl',
'visitall-opt14-strips:p-1-6.pddl',
'visitall-opt14-strips:p-1-7.pddl',
'visitall-opt14-strips:p-1-8.pddl',
'visitall-opt14-strips:p-1-9.pddl',
'visitall-sat14-strips:pfile30.pddl',
'visitall-sat14-strips:pfile31.pddl',
'visitall-sat14-strips:pfile32.pddl',
'visitall-sat14-strips:pfile33.pddl',
'visitall-sat14-strips:pfile50.pddl',
'visitall-sat14-strips:pfile51.pddl',
'visitall-sat14-strips:pfile52.pddl',
'visitall-sat14-strips:pfile53.pddl',
'visitall-sat14-strips:pfile54.pddl',
'visitall-sat14-strips:pfile55.pddl',
'visitall-sat14-strips:pfile56.pddl',
'visitall-sat14-strips:pfile57.pddl',
'visitall-sat14-strips:pfile58.pddl',
'visitall-sat14-strips:pfile59.pddl',
'visitall-sat14-strips:pfile60.pddl',
'visitall-sat14-strips:pfile61.pddl',
'visitall-sat14-strips:pfile62.pddl',
'visitall-sat14-strips:pfile63.pddl',
'visitall-sat14-strips:pfile64.pddl',
'visitall-sat14-strips:pfile65.pddl',
'woodworking-opt11-strips:p01.pddl',
'woodworking-opt11-strips:p02.pddl',
'woodworking-opt11-strips:p03.pddl',
'woodworking-opt11-strips:p04.pddl',
'woodworking-opt11-strips:p05.pddl',
'woodworking-opt11-strips:p06.pddl',
'woodworking-opt11-strips:p07.pddl',
'woodworking-opt11-strips:p08.pddl',
'woodworking-opt11-strips:p09.pddl',
'woodworking-opt11-strips:p10.pddl',
'woodworking-opt11-strips:p11.pddl',
'woodworking-opt11-strips:p12.pddl',
'woodworking-opt11-strips:p13.pddl',
'woodworking-opt11-strips:p14.pddl',
'woodworking-opt11-strips:p15.pddl',
'woodworking-opt11-strips:p16.pddl',
'woodworking-opt11-strips:p17.pddl',
'woodworking-opt11-strips:p18.pddl',
'woodworking-opt11-strips:p19.pddl',
'woodworking-opt11-strips:p20.pddl',
'woodworking-sat11-strips:p01.pddl',
'woodworking-sat11-strips:p02.pddl',
'woodworking-sat11-strips:p03.pddl',
'woodworking-sat11-strips:p04.pddl',
'woodworking-sat11-strips:p05.pddl',
'woodworking-sat11-strips:p06.pddl',
'woodworking-sat11-strips:p07.pddl',
'woodworking-sat11-strips:p08.pddl',
'woodworking-sat11-strips:p09.pddl',
'woodworking-sat11-strips:p10.pddl',
'woodworking-sat11-strips:p11.pddl',
'woodworking-sat11-strips:p12.pddl',
'woodworking-sat11-strips:p13.pddl',
'woodworking-sat11-strips:p14.pddl',
'woodworking-sat11-strips:p15.pddl',
'woodworking-sat11-strips:p16.pddl',
'zenotravel:p01.pddl',
'zenotravel:p02.pddl',
'zenotravel:p03.pddl',
'zenotravel:p04.pddl',
'zenotravel:p05.pddl',
'zenotravel:p06.pddl',
'zenotravel:p07.pddl',
'zenotravel:p08.pddl',
'zenotravel:p09.pddl',
'zenotravel:p10.pddl',
'zenotravel:p11.pddl',
'zenotravel:p12.pddl',
'zenotravel:p13.pddl',
'zenotravel:p14.pddl',
'zenotravel:p15.pddl',
'zenotravel:p16.pddl',
'zenotravel:p17.pddl',
'zenotravel:p18.pddl',
'zenotravel:p19.pddl',
'zenotravel:p20.pddl',
]

exp.add_report(
    DomainAttributesReport(
        filter_algorithm=[
            'ground-symmetries-stabgoal-stabinit',
            'translate-symm-stabgoal-stabinit',
            'baggy-translate-symm-stabgoal-stabinit',
        ],
        format='tex',
        attribute_aggregation_pairs=[
            # ('num_tasks', sum),
            ('has_symmetries', sum),
            # ('time_symmetries', geometric_mean),
            # ('symmetry_group_order', sum),
        ],
    ),
    outfile=os.path.join(exp.eval_dir, 'ground-lifted-baggylifted.txt'),
)

def clamp_large_values(run):
    symmetry_group_order = run.get('symmetry_group_order', None)
    if symmetry_group_order is not None and symmetry_group_order > 10**15:
        symmetry_group_order = 10**15
    if symmetry_group_order == 0:
        return False
    run['symmetry_group_order'] = symmetry_group_order
    return run

exp.add_report(
    ScatterPlotReport(
        filter_algorithm=[
            'ground-symmetries-stabgoal-stabinit',
            'translate-symm-stabgoal-stabinit',
        ],
        # get_category=lambda run1, run2: run1['domain'],
        attributes=['symmetry_group_order'],
        filter=[clamp_large_values],
        format='tex',
    ),
    outfile=os.path.join(exp.eval_dir, 'ground-vs-lifted-symmetry-group-order.tex'),
)

##### From here on: use experiment data without group order computation #####

symmetry_graph_size = Attribute('symmetry_graph_size', absolute=True, min_wins=True)
time_symmetries = Attribute('time_symmetries', absolute=False, min_wins=True, functions=[geometric_mean])
has_symmetries = Attribute('has_symmetries', absolute=True, min_wins=False)
attributes = [symmetry_graph_size, time_symmetries, has_symmetries]

exp.add_report(
    ComparisonReport(
        algorithm_pairs=[
            ('ground-symmetries-stabgoal-stabinit', 'translate-symm-stabgoal-stabinit-no-order'),
        ],
        format='html',
        attributes=attributes,
        filter=[print_stuff],
    ),
    outfile=os.path.join(exp.eval_dir, 'ground-lifted-compare.html'),
)

def filter_baggy_tasks(run):
    domain = run['domain']
    problem = run['problem']
    return "{}:{}".format(domain, problem) in baggy_tasks

exp.add_report(
    ComparisonReport(
        algorithm_pairs=[
            ('translate-symm-stabgoal-stabinit-no-order', 'baggy-translate-symm-stabgoal-stabinit-no-order'),
        ],
        format='html',
        attributes=attributes,
        filter=[filter_baggy_tasks],
    ),
    outfile=os.path.join(exp.eval_dir, 'lifted-baggylifted-compare.html'),
)


class DomainsWithLargeDifferencesReport(PlanningReport):
    def __init__(self, attribute_threshold_pairs, **kwargs):
        self.attribute_threshold_pairs = attribute_threshold_pairs
        kwargs.setdefault('format', 'txt')
        PlanningReport.__init__(self, **kwargs)

    def get_text(self):
        """
        We do not need any markup processing or loop over attributes here,
        so the get_text() method is implemented right here.
        """
        attributes = set()
        for attribute, threshold in self.attribute_threshold_pairs:
            attributes.add(attribute)

        domain_problem_algorithm_attribute_values = {}
        algo_domain_problem_algorithm = {}
        for algo in self.algorithms:
            algo_domain_problem_algorithm[algo] = {}
            for domain in self.domains.keys():
                algo_domain_problem_algorithm[algo][domain] = defaultdict(dict)
        for (domain, algo), runs in self.domain_algorithm_runs.items():
            for attribute in attributes:
                for run in runs:
                    problem = run['problem']
                    #value = run.get(attribute, float('inf'))
                    value = run.get(attribute, None)
                    algo_domain_problem_algorithm[algo][domain][problem][attribute] = value

        assert(len(self.algorithms) == 2)
        algo1 = self.algorithms[0]
        algo2 = self.algorithms[1]
        attribute_to_domains_with_large_diff = defaultdict(set)
        for domain, problems in self.domains.items():
            for problem in problems:
                for attribute, threshold in self.attribute_threshold_pairs:
                    val1 = algo_domain_problem_algorithm[algo1][domain][problem][attribute]
                    val2 = algo_domain_problem_algorithm[algo2][domain][problem][attribute]
                    if val1 is None and val2 is None:
                        continue
                    if val1 == 0:
                        val1 = 0.01
                    if val2 == 0:
                        val2 = 0.01
                    if val1 is None or val2 is None or (val1 >= threshold * val2 or val2 >= threshold * val1):
                        attribute_to_domains_with_large_diff[attribute].add(domain)

        lines = []
        for attribute in attributes:
            lines.append("{}:".format(attribute))
            lines.append("[")
            for domain in attribute_to_domains_with_large_diff[attribute]:
                lines.append("  '{}',".format(domain))
            lines.append("]")
            lines.append("")
        return '\n'.join(lines)

exp.add_report(
    DomainsWithLargeDifferencesReport(
        [('symmetry_graph_size', 20)],
        filter_algorithm=[
            'ground-symmetries-stabgoal-stabinit',
            'translate-symm-stabgoal-stabinit-no-order',
        ],
        filter=[not_unsolvable],
        filter_domain=suite,
    ),
    name='domains_with_diff_of_symmetry_graph_size_larger_10',
    outfile=os.path.join(exp.eval_dir, 'domains_with_diff_of_symmetry_graph_size_larger_10.txt'),
)

# generated with above DomainsWithLargeDifferencesReport
domains_with_diff_of_symmetry_graph_size_larger_20 = [
  'psr-small',
  'mystery',
  'satellite',
  'hiking-sat14-strips',
  'scanalyzer-sat11-strips',
  'pipesworld-tankage',
  'trucks',
  'transport-sat14-strips',
  'scanalyzer-opt11-strips',
  'tetris-sat14-strips',
  'parking-opt14-strips',
  'psr-large',
  'tetris-opt14-strips',
  'parking-sat14-strips',
  'logistics98',
  'mprime',
  'zenotravel',
  'depot',
  'miconic-fulladl',
  'tidybot-sat11-strips',
]

def domain_category_for_grounding_reduced(run1, run2):
    if run1['domain'] in domains_with_diff_of_symmetry_graph_size_larger_20:
        return run1['domain']
    return None

exp.add_report(
    ScatterPlotReport(
        filter_algorithm=[
            'ground-symmetries-stabgoal-stabinit',
            'translate-symm-stabgoal-stabinit-no-order',
        ],
        # get_category=lambda run1, run2: run1['domain'],
        get_category=domain_category_for_grounding_reduced,
        attributes=['symmetry_graph_size'],
        format='tex',
    ),
    outfile=os.path.join(exp.eval_dir, 'ground-vs-lifted-symmetry-graph-size.tex'),
)

exp.add_report(
    ScatterPlotReport(
        filter_algorithm=[
            'ground-symmetries-stabgoal-stabinit',
            'translate-symm-stabgoal-stabinit-no-order',
        ],
        # get_category=lambda run1, run2: run1['domain'],
        attributes=['time_symmetries'],
        format='png',
    ),
    outfile=os.path.join(exp.eval_dir, 'ground-vs-lifted-time-symmetries.png'),
)

exp.run_steps()
